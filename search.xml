<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HCNA</title>
      <link href="/2022/11/19/HCNA/"/>
      <url>/2022/11/19/HCNA/</url>
      
        <content type="html"><![CDATA[<h1>OSPF</h1><p><strong>DR和BDR：</strong></p><ul><li>只要是多路访问BMA和NBMA网络中，为了减少邻接关系的数量，从而减少数据包交换次数，最终节省宽带，降低对路由器处理能力的压力，选举DR和BDR</li></ul><p><strong>选举规则：</strong></p><blockquote><p>首先比较Hello报文携带的优先级</p><ul><li>优先级范围0-255，默认为1</li><li>优先级最高的被选举为DR，优先级次高的被选举为BDR</li><li>优先级为0的不参与选举</li></ul><p>优先级一致的情况下，比较RID，越大越优</p><p>选举具有非抢占性，除非当DR和BDR都失效或重庆OSPF进程</p></blockquote><p><strong>命令</strong></p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>ospf 1 router-id 1.1.1.1</td><td>开启ospf，进程号缺省为1，手动配置Router ID</td></tr><tr><td>area 0</td><td>配置区域</td></tr><tr><td>network 192.168.0.0 0.0.0.255</td><td>宣告网络，即指定运行ospf的接口；使用反掩码来匹配</td></tr><tr><td>dis ospf peer [brief]</td><td>显示ospf邻居信息</td></tr><tr><td>ospf timer hello 10</td><td>修改Hello包发生间隔</td></tr><tr><td>ospf timer dead 40</td><td>修改Hello包超时时间</td></tr><tr><td>dis ospf int g0/0/0</td><td>显示ospf接口信息</td></tr><tr><td>ospf cost 10</td><td>修改开销，范围1-65535，缺省为1</td></tr><tr><td>bandwidth-reference 100</td><td>调整带宽参考值，默认为100Mbps需要在在整个ospf网络中统一进行调整</td></tr><tr><td>reset ospf process</td><td>重启ospf进程</td></tr><tr><td>ospf dr-priority 100</td><td>配置DR和BDR的选举优先级，越大越大优</td></tr><tr><td>dis ip routing-table protocol ospf</td><td>查看ospf学习到的路由</td></tr></tbody></table><p><font color='red'>OSPF缺省路由发布命令：default-route-advertise</font></p><p>OSPF认证命令：</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>int g0/0/0；ospf authentication-mode md5 1 cipher wakin</td><td>配置接口认证</td></tr><tr><td>ospf 1；area 0 ；authentication-mode mad5 1 cipher wakin</td><td>配置区域认证</td></tr><tr><td>如果同时配置，接口认证优先生效</td><td></td></tr></tbody></table><h1>交换机</h1><p><strong>交换机的主要功能：</strong></p><ul><li>终端设备的接入；</li><li>以太网数据帧的交换，根据目的MAC地址转发数据帧；</li><li>学习MAC地址，并维护MAC地址表；</li><li>防止二层环路</li><li>工作在数据链路层，转发数据帧</li></ul><p><strong><font color='red'>工作原理：根据MAC地址表中的MAC地址记录，做出智能转发</font></strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191137104.png" alt="交换机工作原理"></p><table><thead><tr><th>原理</th><th>备注</th></tr></thead><tbody><tr><td><font color='red'>学习(Learn)</font></td><td>当从一个接口收到帧时，把帧内的<font color='aqua'>源MAC</font>与该接口进行绑定，存入MAC地址表</td></tr><tr><td><font color='red'>泛红(Flood)</font></td><td>当从一个接口收到<font color='aqua'>广播帧、组播帧、未知单播帧</font>(目标MAC不存在与MAC地址表)，吧该帧从所以其他接口转发出去，出来接口</td></tr><tr><td><font color='red'>转发(Forward)</font></td><td>当从一个接口收到<font color='aqua'>已知单播帧</font>，立即从相应的的接口转发出去</td></tr><tr><td><font color='red'>更新(Update)</font></td><td>默认每条记录保存300s；交换机重启会清空所有接口学习到的记录；接口关闭后会情况该接口学习到的记录；一个源MAC出现在另外个接口上，会删除老的记录，添加新的记录</td></tr><tr><td>PS</td><td>对于一台交换机来说：一个MAC只能关联在一个接口上或者一个接口上可以学习到多个MAC</td></tr><tr><td></td><td></td></tr></tbody></table><p>以太网接口工作模式：</p><table><thead><tr><th>术语</th><th>解释</th></tr></thead><tbody><tr><td>半双工(half-duplex)</td><td>通信双方都能发生和接收数据，但不能同时进行</td></tr><tr><td>全双工(full-duplex)</td><td>通信双发都能同时接受和发生数据</td></tr><tr><td>速率(speed)</td><td>接口连接时两端进行协商，协商失败则无法正常通行</td></tr></tbody></table><h1>VLAN</h1><p><strong>vlan概述</strong>：<font color='red'>Virtual LAN 虚拟局域网</font></p><ul><li>将一个物理局域网在逻辑上划分成多个广播域</li><li><font color='red'>1 VLAN=1广播域=1子网</font></li><li>广播不会再VLAN之间转发，而是被限制在各自的VLAN中</li><li>不同VLAN见的设备默认无法通讯，需要第三层设备才能实现互通</li></ul><blockquote><p>vlan的范围：<font color='red'>0 - 4095共4096个</font>(0和4095保留，1为默认)</p></blockquote><h2 id="vlan优点："><strong>vlan优点：</strong></h2><ul><li>有效控制广播域范围</li><li>增强局域网的安全性</li><li>灵活构建虚拟工作组</li><li>简化网络管理</li></ul><h2 id="vlan链路类型："><strong>vlan链路类型：</strong></h2><p>IEEE 802.1q：dot1q</p><table><thead><tr><th>类型</th><th>解释</th></tr></thead><tbody><tr><td><font color='red'>Access Link</font> 接入链路</td><td>拥有连接<font color='red'>主机和交换机</font>的链路。接入链路上传输的帧都是untagged帧</td></tr><tr><td><font color='red'>Trunk Link</font> 中继/干道链路</td><td>用于<font color='red'>交换机间的互联或交互就与路由器之间</font>的链路。中继链路上传输的帧几乎全是tagged帧用于两端识别</td></tr></tbody></table><p><strong>PVID</strong></p><ul><li>即Port VLAN ID，代表端口的缺省VLAN</li><li>X7系列交换机每个接口PVID=1</li></ul><h2 id="VLAN端口类型："><strong>VLAN端口类型：</strong></h2><p><font color='red'>Access</font>接口发送的数据包，不带标签，</p><p>收到数据后会添加VLAN Tag，VLAN ID和端口的PVID相同</p><p>转发数据前会移除VLAN Tag</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191138206.png" alt="image-20220326210537646"></p><p><font color='red'>Trunk中继端口</font></p><p>用于连接交换机或路由器</p><p>收到帧时，</p><ul><li>如果该帧不包含Tag，将打上端口的PVID；</li><li>如果该帧包含Tag，则不改变</li></ul><p>发送帧时，该帧的VLAN ID在Trunk的允许发送列表中；</p><ul><li>若与端口的PVID相同时，则剥离tag发送；</li><li>若愚端口的PVID不同时，则直接发送</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191138622.png" alt="image-20220328082751417"></p><p><font color='red'>Hybrid混杂端口</font></p><p>既可以连接主机，又可以连接其他交换机</p><p>既可以连接接入链路又可以连接干道链路</p><p>允许多个VLAN的帧通过，并可以在出接口方向将某些vlan帧的Tag剥夺(由命令决定)</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191138248.png" alt="image-20220328084009176"></p><h2 id="VLAN转发流程："><strong>VLAN转发流程：</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191138013.png" alt="image-20220328084623097"></p><p>VLAN规划：<font color='red'>基于端口</font>最为常见</p><h2 id="命令">命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>vlan 10</td><td>创建单个vlan</td></tr><tr><td>vlan batch 10 to 20</td><td>创建多个vlan</td></tr><tr><td>port link-type access/trunk/hybird</td><td>配置接口类型</td></tr><tr><td>port default vlan 10</td><td>配置Access关联VLAN/PVID</td></tr><tr><td>port trunk allow-pass vlan 10</td><td>配置Trunk允许vlan</td></tr><tr><td>port trunk pvid vlan 10</td><td>配置Trunk的PVID</td></tr><tr><td>port hybird tagged/untagged vlan 10</td><td>配置Hybird标记VLAN</td></tr><tr><td>porthybrid pvid vlan 10</td><td>配置Hybird的PVID</td></tr><tr><td>display vlan</td><td>验证VLAN</td></tr><tr><td>display port vlan</td><td>验证VLAN</td></tr></tbody></table><h2 id="总结">总结</h2><p>华为交换机端口分为三种模式：access、trunk、hydird</p><ul><li>access端口：用于连接主机，pvid就是该端口所属的vlan号，只能属于一个vlan</li><li>trunk端口：用于交换机之间连接，默认pvid是vlan1，不属于任何vlan</li><li>hybird端口：是一种混合端口类型，默认pvid是vlan1，不属于任何vlan，是交换机端口的默认模式</li></ul><p><strong>pvid的作用：</strong></p><p>1、当端口收到一个未标记的帧时，就把该帧打上vlan id，这个id值等于pvid的值，然后转发到VID和PVID相等的VLAN中</p><p>2、当帧从端口向外发送出去时，如果帧头中的VID和端口的PVID值相同，就把这个标识去掉，再发送</p><h1>vlan间路由</h1><p>单臂路由</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191138623.png" alt="image-20220328105039680"></p><p>命令</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>dot1q termination vid 10</td><td>关联子接口和VLAN</td></tr><tr><td>arp broadcast enable</td><td>开启子接口的ARP广播功能(华为和华三)</td></tr></tbody></table><p>三层交换(MLS)普遍用这个</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191157719.png" alt="image-20220328111246089"></p><p>命令</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>interface vlanif 10</td><td>创建VLAN接口</td></tr><tr><td>PS</td><td>vlan接口的编号必须对应一个已创建的vlan</td></tr><tr><td>portswitch</td><td>配置接口为2层</td></tr><tr><td>undo portswitch</td><td>配置接口为3层</td></tr><tr><td>undo port default vlan</td><td>删除access链路</td></tr></tbody></table><h1>GARP-GVRP</h1><p><font color='red'>GARP：通用属性注册协议</font></p><ul><li>在交换机间分发、传播、注册某种信息(VLAN、组播地址等)</li><li>主要用于大中型网络中，用来提升交换机的管理效率</li><li>一种协议规范</li></ul><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191157617.png" alt="image-20220329100527782"></p><p>GARP消息类型：</p><table><thead><tr><th>类型</th><th>解释</th></tr></thead><tbody><tr><td>join</td><td>加入，端口加入VLAN</td></tr><tr><td>Leave</td><td>注销，端口推出VLAN</td></tr><tr><td>Leave all</td><td>注销所有</td></tr></tbody></table><p><font color='red'>GVRP：VLAN注册协议 </font>应用</p><ul><li><font color='aqua'>接收来自其他交换机的VLAN注册信息</font>，并动态更新本地的VLAN注册信息，包括当前的VLAN、VLAN成员</li><li><font color='aqua'>将本地的VLAN注册信息向其他交换机传播</font>，以便使同一交换网内所有支持GVRP特性的设备的VLAN信息达成一致</li><li>手动配置的VLAN是静态VLAN，通过GVRP创建的VLAN是动态VLAN(dynam)</li><li>GVRP传播的VLAN注册信息包括本地手工配置的静态注册信息和其他交换机的动态注册信息</li></ul><p><font color='red'>单向注册</font></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191446192.png" alt="image-20220329104103456"></p><p><font color='red'>GVRP注册模式</font></p><p>normal：静态和动态都会学习到</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191446398.png" alt="image-20220329102150962"></p><p>forbidden：除了vlan1，其他的vlan都不能注册，还会删除</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191446919.png" alt="image-20220329102219124"></p><p>fixed：只有静态能注册</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191446771.png" alt="image-20220329102625770"></p><p><strong>命令</strong></p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>gvrp</td><td>全局开启GVRP，默认关闭</td></tr><tr><td>gvrp</td><td>接口开启GVRP，接口必须是Trunk，且不能在更改</td></tr><tr><td>gvrp registration</td><td>修改GVRP注册模式</td></tr><tr><td>display gvrp status</td><td>查看GVRP状态</td></tr></tbody></table><h1>STP</h1><p>STP：生成树协议，提供两大功能：</p><table><thead><tr><th>功能</th><th>解释</th></tr></thead><tbody><tr><td>消除环路</td><td>通过阻断冗余链路来消除网络中可能存在的环路</td></tr><tr><td>链路备份</td><td>当活动路径发送故障时，激活备份链路，及时恢复网络连通性</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447782.png" alt="image-20220329112419496"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447402.png" alt="image-20220329112433858"></p><h2 id="STP选举步骤">STP选举步骤</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447651.png" alt="image-20220329150435876"></p><p><font color='red'>BPDU：桥协议数据单元</font></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447450.png" alt="image-20220329150832741"></p><p>桥ID</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447654.png" alt="image-20220329151927984"></p><p>端口ID</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447898.png" alt="image-20220329152027839"></p><h2 id="stp选举过程">stp选举过程</h2><p><font color='red'>BID最小</font>的成为根桥(先比较优先级，再比较MAC)</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447964.png" alt="image-20220329153037103"></p><p><font color='red'>根端口选举</font></p><p>根交换机的对端端口为根端口，根桥的各个端口为指定端口</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447773.png" alt="image-20220329153314185"></p><p><font color='red'>指定端口选举</font></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447904.png" alt="image-20220329154050133"></p><h2 id="stp端口转换">stp端口转换</h2><p>注：listening变为learning需要15s，learning变为Forwarding需要15s</p><p><font color='red'>BPDU老化是20S</font>，所以总共需要30s</p><blockquote><p>1、端口初始化或开启<font color='red'>(disabled)</font></p><p>2、端口被选为根端口或指定端口<font color='red'>(blocking)</font></p><p>3、端口不再是根端口或指定端口<font color='red'>(listening)</font></p><p>4、Forward Delay计时器超时<font color='red'>(learning)</font></p><p>5、端口禁用或链路失效<font color='red'>(Forwarding)</font></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447307.png" alt="image-20220329202626358"></p><h2 id="stp拓扑变化">stp拓扑变化</h2><p>根桥故障</p><p>直连链路故障需要30s，阻塞端口才能变成根端口</p><p>非直连链路故障需要50s</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447114.png" alt="image-20220329204210002"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447818.png" alt="image-20220329204952660"></p><p>检测到拓扑改变的交换机通过根端口向根桥发送TCN，上游交换机收到TCN后回应TCA，让后下游交换机停止发送TCN，再通过根端口发送TCN直到根桥收到，根桥通过指定端口发送TC通知所有下游交互机把<font color='aqua'>MAC地址记录老化时间从300秒变为15秒</font></p><h2 id="命令-v2">命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>stp mode （mstp | stp | rstp）</td><td>配置stp模式，默认为MSTP</td></tr><tr><td>stp priority 4096</td><td>配置BID优先级值，0-61440，步长为4096</td></tr><tr><td>stp root primary/secondary</td><td>自动修改优先级，指定主/备根桥</td></tr><tr><td>stp pathcost-standard （dot1d-1998 | dot1t | legacy</td><td>配置路径开销值的标准</td></tr><tr><td>开销标准：</td><td>legacy：cost=1~200000,华为私有</td></tr><tr><td></td><td>802.1d标准：cost=1~65535</td></tr><tr><td></td><td>802.1t标准：cost=1~200000000,默认</td></tr><tr><td>stp cost 10</td><td>修改stp开销</td></tr><tr><td>stp prot priority 144</td><td>修改PID优先级，步长为16</td></tr><tr><td>display stp {brief}</td><td>显示stp配置信息和参数</td></tr></tbody></table><h1>RSTP</h1><h1>DHCP</h1><p><font color='red'>DHCP：Dynamic Host Configure Protocol动态主机配置协议</font></p><ul><li><p>从BOOTP协议发展而来</p></li><li><p>UDP封装，服务器67，客户端68</p></li><li><p>动态分配TCP/IP信息(IP地址、子网掩码、默认网关、DNS服务器等)</p></li><li><p>分配出去的信息是有租约的</p></li></ul><h2 id="DHCP报文类型：">DHCP报文类型：</h2><table><thead><tr><th>报文类型</th><th>含义</th></tr></thead><tbody><tr><td>DHCP DISCOVER</td><td>客户端用来寻找DHCP服务器</td></tr><tr><td>DHCP OFFER</td><td>DHCP服务器用来响应DHCP DISCOVER报文，此报文携带了各种配置信息</td></tr><tr><td>DHCP REQUEST</td><td>客户端请求配置确认，或者续借租期</td></tr><tr><td>DHCP ACK</td><td>服务器对REQUEST报文的确认响应</td></tr><tr><td>DHCP NAK</td><td>服务器对REQUEST报文的拒绝响应</td></tr><tr><td>DHCP RELEASE</td><td>客户端要释放地址时用来通知服务器</td></tr></tbody></table><p><strong>DHCP工作流程</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447337.png" alt="image-20220330153512030"></p><p><strong>DHCP地址池(Pool)：<font color='red'>所分配地址的集合</font></strong></p><ul><li><p>接口地址池的优先级比全局地址高</p><p><img src="C:%5CUsers%5Croot%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220330163720000.png" alt="image-20220330163720000"></p></li></ul><h2 id="命令-v3">命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>dhcp enable；dhcp select interface</td><td>开启DHCP功能，华为默认不开启</td></tr><tr><td>dhcp server dns-list 地址</td><td>关联接口和接口地址池</td></tr><tr><td>dhcp server lease 数字</td><td>配置接口地址池的租期，默认1天</td></tr><tr><td>dhcp server excluded-ip-address 地址</td><td>配置接口地址池的排除地址范围</td></tr><tr><td>dhcp server static-band ip-address ip地址 mac-address mac地址</td><td>配置静态绑定</td></tr><tr><td>dhcp-select global</td><td>关联接口和全局地址池</td></tr><tr><td>ip pool 名称</td><td>创建全局地址池</td></tr><tr><td>network 地址</td><td>配置全局地址池的可分配的网段地址</td></tr><tr><td>gateway-list 地址</td><td>配置全局地址池的网关地址</td></tr><tr><td>dns-list 地址</td><td>配置全局地址池的DNS服务器地址</td></tr><tr><td>lease 数字</td><td>配置全局地址池下的租期，默认1天</td></tr><tr><td>excluded-ip-address 地址</td><td>配置全局地址池下的排除地址范围</td></tr><tr><td>dis ip pool (int 接口名 all)</td><td>查看地址池的属性</td></tr><tr><td>ipconfig /release</td><td>释放租期</td></tr><tr><td>ipconfig /renew</td><td>重新获取</td></tr></tbody></table><h1>ACL</h1><p>ACL(Access Control List)，访问控制列表</p><p>ACL应用场景</p><ul><li><p>ACL可以通过定义规则来允许或拒绝流量的通过</p></li><li><p>可以根据需求来定义过滤的条件以及匹配条件后所指向的动作</p></li></ul><h2 id="ACL工作原理：">ACL工作原理：</h2><ul><li>ACL由<font color='red'>一条或多条规则</font>组成</li><li>每条规则必须选择动作：<font color='red'>允许(permit)或拒绝(deny)</font></li><li>每条规则都有一个id序列号（默认=5，间隔=5）</li><li>序列号<font color='red'>越小越先</font>进行匹配，先细后出</li><li>只要有一条规则和报文匹配，就停止查找，称为<font color='red'>命中规则</font></li><li>查找完所有规则，如果没有符合条件的规则，称为<font color='red'>未命中规则</font></li><li>ACL创建后，必须将其<font color='red'>应用</font>到某个接口或其他技术内才会生效</li><li>应用在接口时必须选择方向：<font color='red'>入站或出战</font>(相对设备来判断)</li><li>不能过滤由<font color='red'>设备自己</font>产生的数据</li></ul><h2 id="ACL类型：">ACL类型：</h2><p>ACL又分为数字型ACL和命名型ACL</p><table><thead><tr><th>分类</th><th>编号范围</th><th>参数</th></tr></thead><tbody><tr><td>基本ACL</td><td>2000-2999</td><td>源IP</td></tr><tr><td>高级ACL</td><td>3000-3999</td><td>源IP、目的I源端口、目的端口等</td></tr><tr><td>二层ACL</td><td>4000-4999</td><td>源MAC地址、目的MAC地址、以太帧协议类型等</td></tr></tbody></table><p><strong>ACL接口调用方向的建议：</strong></p><p>1、基本ACL尽量调用在<font color='aqua'>离目标最近的出战接口</font></p><p>2、高级ACL尽量调用在<font color='aqua'>离源头最近的入站接口</font></p><h2 id="命令-v4">命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>acl 2000</td><td>创建一个基本ACL</td></tr><tr><td>rule 5 deny/permit source 192.168.1.0 0.0.0.255</td><td>配置ACL的规则：允许或拒绝源地址为192.168.1.0/24网段内的所有流量</td></tr><tr><td>acl 3000</td><td>创建一个高级ACL</td></tr><tr><td>rule 5 deny/permit tcp source 192.168.1.0 0.0.0.255 destination 8.8.8.8 0 destination-port eq 80</td><td>配置ACL的规则：允许或拒绝源地址为192.168.1.0/24网段内到8.8.8.8的HTTP流量</td></tr><tr><td>traffic-filter inbound/outbound acl 2000</td><td>在接口调用ALC过滤流量</td></tr><tr><td>dis acl 2000</td><td>验证ACL</td></tr><tr><td>dis traffic-filter acl 3000</td><td>查看设备上所有基于ACL调用情况</td></tr></tbody></table><h1>NAT</h1><p>NAT：网络地址转换技术NAT(Network Address Translation)主要用于实现位于内部网络的主机访问外部网络的功能，当局域网内的主机需要访问外部网络时，通过NAT技术可以将其私网地址转换为公网地址，并且多个私网用户可以公用一个公网地址，这样也既可以保证网络互通，又节省了公网地址</p><p><strong>NAT的好处：</strong></p><ul><li>有效避免来自外网的攻击，可以很大程度上<font color='red'>提高网络安全性</font></li><li>控制内网主机访问外网，同时也控制外网主机访问内网，解决了内网和外网不能互通的问题</li></ul><h2 id="静态NAT">静态NAT</h2><p><img src="C:%5CUsers%5Croot%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220331212821748.png" alt="image-20220331212821748"></p><p><strong>静态nat命令</strong></p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>nat static enable</td><td>开启NAT静态功能</td></tr><tr><td>nat static global 公网地址inside 私网地址</td><td>创建静态NAT</td></tr><tr><td>dis nat static</td><td>查看静态NAT的配置</td></tr></tbody></table><h2 id="动态NAT">动态NAT</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447009.png" alt="image-20220331213834773"></p><ul><li>动态NAT地址池中的地址用尽以后，只能被占用的公网地址被释放后，其他主机才能是由它来访问公网</li></ul><p><strong>动态NAT和PAT配置</strong></p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><font color='red'>nat address-group</font> 编号 公网地址范围</td><td>配置NAT地址池</td></tr><tr><td><font color='red'>nat outbound</font> acl 编号 address-group 编号[no-pat]</td><td>关联一个ACL和一个NAT地址池。ACL用来匹配能够转换的源地址</td></tr><tr><td><font color='red'>no-pat</font></td><td>只转换地址而不转换端口</td></tr><tr><td><font color='red'>dis nat address-group</font></td><td>查看NAT地址池配置信息</td></tr><tr><td><font color='red'>dis nat outbound</font></td><td>查看动态NAT配置信息</td></tr></tbody></table><h2 id="NAPT">NAPT</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191447368.png" alt="image-20220331215519515"></p><ul><li><font color='red'>NAPT</font>(Network Address Port Translation)，也称为<font color='red'>NAT-PT或PAT</font>，网络地址端口转换，允许多个私网地址映射到同一个公网地址的不同端口</li><li>通常适用于大型企业网络(申请多个固定的公网地址)</li></ul><h2 id="Easy-IP">Easy IP</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191448581.png" alt="image-20220401083035453"></p><ul><li>Easy IP适用于小规模局域网中的主机访问Internet的场景</li><li>如：家庭、小型网吧、小型办公室，这些地方内部主机不多，出接口可以通过<font color='red'>拨号方式获取一个临时公网ip地址</font></li></ul><p><strong>Easy IP 配置</strong></p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>nat outbound acl 编号</td><td>关联出战接口和ACL</td></tr></tbody></table><h2 id="NAT服务器">NAT服务器</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191448031.png" alt="image-20220401091848266"></p><ul><li>NAT具有&quot;屏蔽&quot;内部主机的作用，但有时内网需要向外网提供服务</li><li>当外网用户访问内网服务器时，NAT Server通过事先配置好的&quot;公网IP地址+端口号&quot;与私网IP地址+端口号&quot; 间的映射关系，将服务器的“公网IP地址+端口号”根据映射关系替换成对于的“私网IP地址+端口号”</li></ul><p><strong>NAT服务器配置</strong></p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>nat server protocol tcp/udp global 公网地址/接口 端口 inside 私网地址 端口</td><td>配置NAT服务</td></tr><tr><td>dis nat server</td><td>验证NAT服务器</td></tr></tbody></table><h1>PPP</h1><p>广域网中经常会使用串行链路来提供远距离的数据传输，高级数据链路控制HDLC和点对点协议PPP是两种典型的串口封装协议</p><h2 id="HDLC协议">HDLC协议</h2><ul><li>High-level Data Link Control，高级数据链路控制，简称HDLC，是一种面向比特的链路层协议</li></ul><p>思科默认为HDLC，华为是PPP</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191448091.png" alt="image-20220402095129930"></p><p><strong>HDLC接口地址借用</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191448947.png" alt="image-20220402095744556"></p><h2 id="PPP组件"><strong>PPP组件</strong></h2><table><thead><tr><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>NCP网络层控制协议</td><td>用于对不同的网络层协议进行连接建立和参数协商</td></tr><tr><td>LCP链路控制协议</td><td>用来认证、建立、拆除和监控PPP数据链路</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191449513.png" alt="image-20220402102327914"></p><p><em>这里LCP子层和IPCP子层都open，ppp链路正常建立了</em></p><h2 id="PPP认证模式">PPP认证模式</h2><table><thead><tr><th>模式</th><th>解释</th></tr></thead><tbody><tr><td>PAP密码认证协议</td><td>以<font color='red'>明文</font>方式直接发送密码，二次握手机制，<font color='red'>发起方为被认证方</font>，可以做无限次的尝试(暴力破解)<img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191448543.png" alt="image-20220402103258568"></td></tr><tr><td>CHAP挑战/质询握手认证协议</td><td>以<font color='red'>MD5</font>来隐藏密码，<font color='red'>三次握手</font>机制，<font color='red'>由认证方发起认证</font>，有效避免暴力破解，在链路建立成功后具有再次认证检测机制，目前在企业网的远程接入环境中用的比较常见<img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191448494.png" alt="image-20220402111244777"></td></tr></tbody></table><h2 id="命令-v5">命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>aaa</td><td><em>启用aaa配置管理</em></td></tr><tr><td>local-user zhang password cipher hawei</td><td>创建PPP认证用户</td></tr><tr><td>local-user zhang service-type ppp</td><td>创建PPP认证用户</td></tr><tr><td>PPP authentication-mode pap/chap</td><td>开启PAP/CHAP认证</td></tr><tr><td>PPP pap local-user zhang password cipher hawei</td><td>配置PAP凭证</td></tr><tr><td>ppp chap user zhang ;  ppp chap password cipher huwei</td><td>配置CHAP凭证</td></tr></tbody></table><h1>VRRP</h1><p>VRRP：Virtual Router Redundancy Protocol，<font color='red'>虚拟路由器冗余协议</font></p><ul><li>将多个物理网关加入到<font color='red'>备份组</font>中，形成一台<font color='red'>虚拟网关</font>，承担物理网关的功能。</li><li>只有备份组中仍有一台物理网关工作正常，虚拟网关就仍然正常工作。</li><li>两个版本：VRRPv2基于IPv4，v3基于IPv6</li></ul><p><font color='aqua'>VRRP备份组</font>：VRRP Group</p><ul><li>将局域网内的一组网关设备划分在一起，称为一个备份组。</li><li>由一个主(Master)和多个备(Backup)组成，功能上相当于一台虚拟网关</li><li>虚拟网关具有一个虚拟IP地址，作为终端的网关IP地址</li></ul><h2 id="VRRP选举规则">VRRP选举规则</h2><p>根据优先级，选出Master，承担网关功能</p><table><thead><tr><th>角色</th><th>解释</th></tr></thead><tbody><tr><td>Master</td><td>负责应答对虚拟IP地址的<font color='red'>ARP请求</font>，转发发往虚拟网关的数据包</td></tr><tr><td>Backup</td><td>负责在Master故障后，<font color='red'>接替</font>Master的工作</td></tr><tr><td>优先级</td><td>0-255,默认100，<font color='red'>越大越优</font>；255保留给I<font color='red'>P地址拥有者</font>使用；0用于触发Backup立即成为Master；如果优先级一致，IP地址越大越先</td></tr><tr><td>抢占规则</td><td>默认开启抢占</td></tr></tbody></table><h2 id="VRRP工作流程">VRRP工作流程</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191449587.png" alt="VRRP工作流程1"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191449027.png" alt="VRRP工作流程2"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191449724.png" alt="VRRP工作流程3"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191449864.png" alt="VRRP工作流程4"></p><h2 id="VRRP定时器">VRRP定时器</h2><table><thead><tr><th>定时器</th><th>解释</th></tr></thead><tbody><tr><td><font color='red'>通告间隔定时器</font></td><td><font color='aqua'>默认1秒</font>。Master会定时发送VRRP通过报文，通知自己工作正常。如果Backup在等待了3个间隔时间后，依然没有收到通告报文，则认为自己是Master，并对外发送VRRP通告报文，重新进行Master的选举</td></tr><tr><td><font color='red'>抢占延迟定时器</font></td><td><font color='aqua'>默认0秒</font>。为了避免频繁进行<font color='aqua'>主备转换</font>，让Backup有足够的时间收集必要的信息(如路由信息)。Backup接收到优先级较低的VRRP通告报文后，不会立即抢占成为Master，而是等待一定时间后，才会对外发送VRRP通告报文取代原来的Master。</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191450660.png" alt="VRRP报文格式5"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191450031.png" alt="VRRP状态机制6"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191450272.png" alt="VRRP设计方案注意事项7"></p><h2 id="VRRP应用">VRRP应用</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191450974.png" alt="VRRP应用-主备备份8"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191451196.png" alt="VRRP应用-负载分担8"></p><p>用的比较多的负载分担图：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191451315.png" alt="VRRP应用-负载分担8.1"></p><h2 id="VRRP跟踪">VRRP跟踪</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191451958.png" alt="VRRP跟踪9"></p><h2 id="命令-v6">命令</h2><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td><font color='red'>vrrp vrip 1 virual-ip</font> <font color='aqua'>192.168.1.254</font></td><td>创建备份组及虚拟IP地址</td></tr><tr><td><font color='red'>vrrp vrip 1 priority</font> <font color='aqua'>200</font></td><td>配置优先级</td></tr><tr><td><font color='red'>vrrp vrip 1 timer advertise 1</font></td><td>配置通告延迟，默认为1s</td></tr><tr><td><font color='red'>vrrp vrip 1 preempt-mode disable</font></td><td>关闭抢占模式</td></tr><tr><td><font color='red'>vrrp vrip 1 preempt-mode timer delay 3</font></td><td>配置抢占时延，默认为0s</td></tr><tr><td><font color='red'>vrrp vrip 1 authentication-mode simple/md5 zhang</font></td><td>配置认证</td></tr><tr><td><font color='red'>vrrp vrip 1 track </font><font color='aqua'>interface vlanif 10  reduced/increased</font></td><td>配置接口跟踪,如果检测的接口down了那么它vrrp的优先级就会默认减10，可以修改</td></tr><tr><td><font color='red'>display vrrp </font><font color='aqua'>brief/interface</font></td><td>验证VRRP</td></tr></tbody></table><h1>BFD</h1><p>BFD：<font color='red'>Bidirectional Forwarding Detection，双向转发检测</font></p><ul><li>解决了上述检测机制的不足</li><li>通用、标准化、介质无关、协议无关，为上层协议服务</li><li><font color='aqua'>全网统一</font>的检测机制，用于<font color='aqua'>快速检测</font>、监控网络中<font color='aqua'>链路</font>或<font color='aqua'>路由</font>的转发连通状况</li><li>保证邻居之间能够快速检测到通信故障，从而快速建立起备用通道恢复通信</li></ul><p>BFD工作机制：</p><ul><li>本身没有发现机制，靠上层协议通知</li><li>建立BFD会话，周期性发送BFD控制报文进行检测</li><li>检测到故障后，再通知上层协议</li></ul><h2 id="BFD状态机制">BFD状态机制</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191452721.png" alt="BFD状态机制"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191452261.png" alt="BFD状态机制2"></p><ul><li><font color='red'>状态迁移规则</font>：对端状态变化、检测定时器超时</li></ul><h2 id="BFD会话工作方式">BFD会话工作方式</h2><table><thead><tr><th>控制报文方式</th><th>链路两端会话通过控制报文交互监测链路状态</th></tr></thead><tbody><tr><td>Echo报文方式</td><td>链路某一端通过发送Echo报文由另外一端转发回来，实现对链路的双向监测</td></tr></tbody></table><h2 id="BFD报文格式">BFD报文格式</h2><p><strong><font color='aqua'>使用组播地址=224.0.0.184</font></strong></p><table><thead><tr><th>控制报文</th><th>单跳检测其UDP目的端口号为3784；多跳检测其UDP目的端口号为4784</th></tr></thead><tbody><tr><td>Echo</td><td>UDP目的端口号为3785</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191452212.png" alt="BFD报文格式"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191452426.png" alt="BFD运行模式"></p><h2 id="BFD检测IP链路1"><strong>BFD检测IP链路1</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191453106.png" alt="BFD检测IP链路1"></p><p><img src="E:%5Ctypora%5Cfile%5CCCNA%5C%E6%96%B0CCNA.assets%5CBFD%E6%A3%80%E6%B5%8BIP%E9%93%BE%E8%B7%AF2.png" alt="BFD检测IP链路2"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211191454933.png" alt="BFD应用场景"></p><p>BFD：开启BFD，创建BFD会话，配置BFD会话标识符</p><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>bfd</td><td>开启BFD功能，默认关闭</td></tr><tr><td>bfd 1 bind peer-ip default-ip int g0/0/0</td><td>创建二层端口检测</td></tr><tr><td>bfd 1 bind peer-ip 12.0.0.2 [int vlanif 1]</td><td>创建三层接口检测</td></tr><tr><td>discriminator local/remote 10/20</td><td>配置本地标识符和远端标识符</td></tr><tr><td>commit</td><td>提交BFD会话配置</td></tr><tr><td>min-tx-interval 100；min-rx-interval 100</td><td>配置BFD报文发送和接收间隔。默认为1000毫秒</td></tr><tr><td>detect-multiplier 3</td><td>配置本地检测倍数，默认=3</td></tr><tr><td>display bfd session all verbose</td><td>验证BFD会话状态</td></tr><tr><td>process-interface-status</td><td>配置与接口状态联动</td></tr></tbody></table><table><thead><tr><th>vrrp vrid 1 track bfd-session 10</th><th>配置与VRRP联动</th></tr></thead><tbody><tr><td>bfd all-interfaces enable</td><td>配置与OSPF联动</td></tr><tr><td>peer x.x.x.x bfd enable</td><td>配置与BFD联动</td></tr><tr><td>ip router-static x.x.x.x x x.x.x.x track bfd-session 1</td><td>配置与静态路由联动</td></tr></tbody></table><ul><li>检测时间公式：本端检测间隔=对端检测倍数*max(对端发送间隔，本段接收间隔)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> HCNA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软考-网工</title>
      <link href="/2022/11/18/%E8%BD%AF%E8%80%83/"/>
      <url>/2022/11/18/%E8%BD%AF%E8%80%83/</url>
      
        <content type="html"><![CDATA[<h1>第一章计算机硬件基础</h1><h2 id="CPU结构">CPU结构</h2><p><strong>运算器：<font color='red'>算累缓状</font></strong></p><blockquote><p>运算器ALU：进行算数运算和逻辑运算</p><p>累加器AC：暂时存放运算中的中间结果</p><p>数据缓冲寄存器：用来暂时存放由内存读出的一条指令或一个数据字</p><p>状态条件寄存器PSW：保存算术指令和逻辑指令运算的状态和程序的工作方式</p></blockquote><p><strong>控制器：<font color='red'>程指指时</font></strong></p><blockquote><p>程序计数器PC：存放下一条指令</p><p>指令寄存器IR：用来存放当前正在执行的一条命令</p><p>指令寄存器：指令中的操作码经过指令译码器译码后，即可想操作控制器发出具体操作的特定信号</p><p>时序部件：为指令的执行产生时序信号</p></blockquote><p><strong>指令系统</strong></p><p>指令系统时中央处理器所有指令的集合，通常一条指令可分解为操作码和地址码两部分，<font color='red'>操作码确定指令的操作类型，地址码确定指令所有处理操作数的位置</font></p><h2 id="1、寻址方式"><strong>1、寻址方式</strong></h2><p>指令系统中采用不同寻址方式的目的时扩大寻址空间并提高编程灵活性。常用的寻址方式如图1-1</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153372.png" alt="1-寻址方式"></p><blockquote><p>1、立即寻址方式：通常之间在指令的地址码部分给出操作数</p><p>2、内存寻址：</p><ul><li>直接寻址方式：在指令中直接给出参加运算的操作数或运算结果所存放的主存地址。</li><li>间接寻址方式：在在指令中给出操作数地址的地址。</li><li>变址寻址方式：变址寻址就是变址寄存器中的内容加地址码中的内容即可完成寻址</li></ul><p>3、寄存器寻址：</p><ul><li>寄存器直接寻址：指令在指行过程中所需要的操作数来源于寄存器</li><li>寄存器间接寻址：寄存器存放的操作数在主存的地址</li></ul></blockquote><h2 id="2、RISC和CISC"><strong>2、RISC和CISC</strong></h2><p>RISC和CISC时目前设计制造CPU的两种典型技术</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153712.png" alt="2-CISC与RISC"></p><h2 id="3、Flynn"><strong>3、Flynn</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153475.png" alt="3-Flynn"></p><p>例题：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153316.png" alt="3-Flynn例题"></p><h2 id="4、流水线"><strong>4、流水线</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153240.png" alt="4-流水线"></p><p>流水线是指在程序指向时多条指令重叠进行操作的一种准并行处理实现技术。即可以同时为多条指令的不同部分进行工作，以提高各部件的利用率和指令的平均执行速度</p><p>(1)流水线指令执行时间</p><blockquote><p>标准算法：T=第一条指令执行所需时间 + (指令条数 - 1) * 流水线周期</p><p>流水线执行时间：(t1+t2+t3) + (n-1)*流水线周期</p><p>t：指令执行的时间</p><p>n：有多少条命令</p><p>流水线周期：三个t中最大的一个数</p></blockquote><p>**例题：**DB</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153697.png" alt="4-流水线例题"></p><blockquote><p>600条指令所需要时间为： (4+2+3)*600 = 5400</p><p>用流水线方式执行指令为： (4+2+3)+(600-1)*4 = 2405</p></blockquote><p>(2)流水线的技术指标</p><p>吞吐率：指的是计算机的流水线在特点的时间内可以处理的任务数量。TP=n/TK</p><blockquote><p>n为指令条数，TK为流水线执行时间：600/5400</p><p>其中理论最大吞吐率是 ： <font color='red'>1/流水线周期</font></p></blockquote><p>加速比：完成一批任务，不使用流水线所用的时间与使用流水线所用的时间之比称为流水线 的加速比。 S=TS/Tk</p><blockquote><p>TS不用流水线的方式计算出的时间，Tk为流水线执行时间</p><p>(t1+t1+t3)*n / TK     （4+2+3)**600 /</p><p>流水线的效率指的是流水线的设备利用率</p></blockquote><p><strong>例题：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153481.png" alt="4-流水线例题2"></p><h1>RAID</h1><blockquote><p>RAID0：将所有硬盘构成一个磁盘阵列，可以同时对多个硬盘做读写动作，但是不具备备份及容错能力，<font color='red'>写入速度快，但是可靠度事最差的，磁盘利用率100%</font></p><p>RAID1：采用了硬盘镜像技术，就是把一个硬盘的内容同步备份复制到另一个硬盘里，所有具备了备份和容错能力，这样做的使用<font color='red'>效率不高，但可靠性高</font></p><p>RAID3：</p><ul><li>采用了特点定奇偶校验的数据分段技术，将用于奇偶校验的数据存到特定磁盘中，具有数据容错能力，可靠性较好</li><li>当单个硬盘失效时，会产生奇偶盘I/O瓶颈效应</li><li>硬盘使用率 = (n-1)/n</li></ul><p>RAID5：</p><ul><li>采用了分布式奇偶校验的数据分段技术，将用于奇偶校验的数据存放到各个硬盘中，具有数据容错能力，可靠性号</li><li>校验值分散再各个盘的不同位置，相当程度的分散了负载，故有较好的性能，硬盘利用率 = (n-1)/n</li></ul><p>RAID6：又称“带有两个独立分布式校验方案的独立数据磁盘”，能实现两个磁盘掉线容错的都叫RAID6。硬盘使用率 = (n-2)/n</p><p>RAID10：结合了RAID1和RAID0，先镜像，再条带化</p></blockquote><p><strong>RAID2.0优势</strong></p><ul><li>快速重构</li><li>自动负载均衡</li><li>系统性能提示</li><li>自愈合</li></ul><h1>第二章操作系统</h1><h2 id="进程管理">进程管理</h2><h3 id="进程状态">进程状态</h3><p>操作系统为了便于管理进程，按进程再执行过程中的不同状态，至少定义</p><p>三种不同的进程状态。</p><blockquote><ul><li><p><font color='red'>运行态</font>：占有处理器正在运行</p></li><li><p><font color='red'>就绪态</font>：具备运行条件，等待系统分配处理器以便运行</p></li><li><p><font color='red'>等待态</font>：不具备运行条件，正在等待某个事件的完成</p><p>一个进程再创建后将处于就绪状态。再执行过程中，每个进程任一时刻之后处于这三种状态之一。同时，在一个进程执行过程中，它的状态会发生改变。如图：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153822.png" alt="5-进程的状态"></p></li></ul><p>运行态==》等待态：处于运行状态的进程在运行的过程种需要等待某一件事发生后，才能继续运行，于是该进程由运行状态百年城等待状态。例如等待I/O完成。</p><p>等待态==&gt;就绪态：处于等待状态的进程，假如其等待的事件已经发生结束。于是进程由等待状态变成就绪状态。</p><p>就绪态==&gt;运行态：当处于就像状态的进程被进程调度程序选中后，就分配到处理器来运行，进程由就绪状态变成运行状态。</p><p>运行态==&gt;就绪态：处于运行状态的进程在运行的过程种，因分给它的处理器时间片已用完二不得不让出处理器，于是由进程由运行状态变成就绪状态</p></blockquote><h3 id="进程管理-PV操作">进程管理-PV操作</h3><ul><li><p>临界区：每个进程中访问临界资源的那段代码称为临界区</p></li><li><p>信号量：是一种特殊的变量：互斥信号量、同步信号量</p></li><li><p>PV操作：解决互斥和同步的问题。PV操作是分开来看的</p><ul><li>P操作：申请资源。使S=S-1，若S&gt;=0,则该进程继续执行，否则该进程排入等待队列</li><li>V操作：释放资源。使S=S+1，若S&lt;=0，唤醒等待队列中的一个进程。</li></ul></li></ul><h2 id="存储管理">存储管理</h2><p>存储管理是指对存储器资源的管理。主要是指内存并涉及外存的管理。内存是处理器可以直接存取指令和数据的存储器，是计算机系统中的一种重要资源。在计算机工作时，程序处理的典型过程是：</p><blockquote><p>首先CPU同过程序计数器中的值从内存中取得相应的指令，指令被译码后根据要求可能对从存储器中再取得操作数。对操作数处理完成后，操作结果又会存储到存储器中。在这个过程中，操作系统需要保证程序执行中安装适当的顺序从正确的存储器单元中取指令或者数据，也就是说有效管理存储器的存储空间，根据地址实现这些任务</p></blockquote><h3 id="页式存储">页式存储</h3><p>页式存储管理是通过引入进程的逻辑地址，把进程地址空间与实际物理存储位置分离，从而增加存储管理的灵活性。我们把逻辑地址空间划分为一些相等的片，这些片称为页或页面。同样，物理地址空间也被划分为同样大小的片，称为块。这样用户程序进入内存时，通过页表就可以将一页对应存入到一个块中。这些物理块不必连续。所以内存利用率可以大大提高。</p><p>在页式系统中，指令所给出的逻辑地址分为两部分：逻辑页号和业内地址。其中页号与页内地址所占多少位，与主存的最大容量、页面的大小有关。</p><p>CPU的内存管理单元按逻辑页号查找页表(操作系统为每一个进程维护了一个从虚拟地址到物理地址的映射关系的数据结构，页表的内容就是该进程的虚拟地址到物理地址的一个映射)得到物理页号，将物理页号与页内地址相加形成物理地址。</p><h1>第五章数据通信</h1><p><strong>常用考试数据：</strong><font color='red'>1字节=8比特</font></p><p>单位换算：传输换算进率1000，如1G=1000M   比特bit</p><p>​  存储换算进率1204，如1G=1024M   字节Byte</p><p>信道速度：电缆行道延迟200m/us、200km/ms、200000km/s</p><p>卫星信道速度：<font color='red'>270ms</font></p><p>1秒=1000毫秒，1秒=10^6微秒</p><h2 id="奈奎斯特定理">奈奎斯特定理</h2><p>奈奎斯特定理(无噪声)：<font color='red'><strong>R=2Wlog^2*N</strong></font></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153162.png" alt="奈奎斯特定理"></p><h2 id="香农定理">香农定理</h2><p>香农定理()有噪声：<font color='red'><strong>C = Wlog^2 *（1+S/N）</strong></font></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153589.png" alt="香农定理"></p><p>40db=10000</p><h2 id="信道复用">信道复用</h2><p>t1美国=<font color='red'>1.544Mbps</font></p><p>t2=4个t1=6.312Mbps</p><p>t3=7个t2=44.736Mbps</p><p>t4=6个t3=274.136Mbps</p><p>E1欧洲，中国=2.048Mbps</p><p>E2=4E1=8.488Mbps</p><h2 id="调制技术">调制技术</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153968.png" alt="模拟信道调制"></p><p><strong>码元数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153006.png" alt="码元数"></p><h2 id="曼彻斯特编码"><strong>曼彻斯特编码</strong></h2><p>曼彻斯特编码：<font color='red'>降1升0</font></p><p>差分曼彻斯特编码：折0平1</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181153465.png" alt="曼彻斯特编码"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154138.png" alt="差分曼特斯码"></p><h2 id="编码效率"><strong>编码效率</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154596.png" alt="编码效率"></p><h2 id="海明码">海明码</h2><p><font color='red'>海明码</font>：在数据位m后面增加冗余检验位k，组成信息m+k,则满足<font color='red'>m+k&lt;2^k -1</font>可正一位错误。不但检错还能纠错</p><blockquote><ul><li><p>码距d：也叫海明距离，两个码字之间不同的最小的位数(比特数)</p></li><li><p>可以查出多少位错误：&lt;= d-1</p></li><li><p>可以纠正多少位错误：&lt;d/2</p></li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154288.png" alt="海明码"></p><p><font color='red'>CRC码：</font>冗余循环校验码，是一种循环码，通过循环位移，实现检错，硬件容易实现，广泛用于局域网。只能检错不能纠错</p><p>计算CRC校验码: 多项式除法，不能位加法。</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154515.png" alt="CRC校验码"></p><h1>第七章局域网</h1><h2 id="光纤">光纤</h2><p>多模：<font color='red'>便 宜直径大，传输距离较近</font>(550m)，<font color='red'>反射传播</font>，带宽=2.5Gbps</p><p>单模：<font color='red'>贵 直径小，传输距离远，直线传播</font>，带宽=10Gbps</p><p>双绞线线序：</p><blockquote><p>568A：绿白绿、橙白蓝、蓝白绿、棕白棕</p><p>568B：橙白橙、绿白蓝、蓝白绿、棕白棕</p><p>B类用的比较多</p><p>双绞线测试指标：衰减、近端串扰、直流电阻、阻抗特性、衰减串扰比和电缆特性</p><p>光纤测试：波长窗口参数、最大衰减限值、光回波损耗限值。</p><p>工具有：红光笔、光功率计、光纤检测显微镜及光时域反射仪</p></blockquote><h2 id="CSMA-CD协议">CSMA/CD协议</h2><p>载波监听多路访问协议发送流程：载波监听、冲突检测、发现冲突停止发送、随机延迟重发</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154632.png" alt="局域网2CSMA"></p><h2 id="总以太网">总以太网</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154862.png" alt="总-以太网"></p><h2 id="百兆以太网">百兆以太网</h2><p>T开头的是双绞线，F开头是光纤</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154275.png" alt="快速以太网"></p><h2 id="千兆以太网">千兆以太网</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154246.png" alt="千兆以太网"></p><h2 id="万兆以太网">万兆以太网</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154375.png" alt="万兆以太网"></p><h2 id="无线局域网">无线局域网</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154812.png" alt="无线局域网WLAN"></p><h2 id="两种AP">两种AP</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154851.png" alt=""></p><h2 id="CSMA-CD">CSMA/CD</h2><p>CSMA/CA应用于有线局域网</p><p>CSMA/CD是在无线环境下，载波监听多路访问冲突避免</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154627.png" alt="局域网3CSMD"></p><h2 id="VLAN">VLAN</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154354.png" alt="划分VLAN"></p><h2 id="VLAN帧结构">VLAN帧结构</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154835.png" alt="VLAN结构"></p><p>目的地址-原地址-类型长度-数据字段-填充-校验</p><p>6                  6           2         0-1500   0-46   4S</p><h2 id="STP">STP</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154203.png" alt="stp网桥选举"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181154720.png" alt="stp网桥具体选举"></p><h2 id="STP四种端口状态">STP四种端口状态</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155633.png" alt="STP四种端口状态"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155485.png" alt="STP种类"></p><h1>第八章</h1><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155217.png" alt="广域网"></p><h1>第九章网络互联</h1><h2 id="TCP">TCP</h2><blockquote><p>传输控制协议(TCP) 特点：</p><ul><li>面向连接的传输层协议</li><li>每一条TCP连接只有两个端点</li><li>可靠交付</li><li>全双工通信</li><li>面向字节流</li></ul></blockquote><h2 id="UDP">UDP</h2><blockquote><p>用户数据包协议(UDP) 特点</p><ul><li>无连接</li><li>尽最大努力交付</li><li>面向报文</li><li>支持一对一、一队多、多对一和多对多</li><li>首部开销小</li></ul></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155095.png" alt="TCP、IP协议簇"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155933.png" alt="常见端口"></p><h2 id="IPv4数据包格式">IPv4数据包格式</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155684.png" alt="TCP、IP报文封装"></p><h2 id="片偏移">片偏移</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155153.png" alt="IPv4片偏移"></p><h2 id="ipv4地址范围">ipv4地址范围</h2><p>公网范围</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156842.png" alt="ipv4公网IP范围"></p><p>私网范围</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155825.png" alt="ipv4私网IP范围"></p><h2 id="ICMP">ICMP</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155980.png" alt="ICMP1"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155790.png" alt="ICMP2"></p><h1>子网划分</h1><table><thead><tr><th style="text-align:left">IP地址</th><th style="text-align:center">网络号</th><th style="text-align:center">主机号</th><th style="text-align:left">源地址使用</th><th>目的地址使用</th><th>解释</th></tr></thead><tbody><tr><td style="text-align:left">0.0.0.0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:left">可以</td><td>不能</td><td>在本网络上的本主机</td></tr><tr><td style="text-align:left">255.255.255.255</td><td style="text-align:center">全1</td><td style="text-align:center">全1</td><td style="text-align:left">不能</td><td>可以</td><td>本地广播(路由器不会转发会直接丢弃)</td></tr><tr><td style="text-align:left"></td><td style="text-align:center">Net-ID</td><td style="text-align:center">全1</td><td style="text-align:left">不能</td><td>可以</td><td>直接广播地址(路由器会转发)</td></tr><tr><td style="text-align:left">127.0.0.1</td><td style="text-align:center">127</td><td style="text-align:center">非全0或全1的数</td><td style="text-align:left">可以</td><td>可以</td><td>用作本地软件回环测试</td></tr><tr><td style="text-align:left">169.254.0.0</td><td style="text-align:center">169.254</td><td style="text-align:center">非全0或全1的数</td><td style="text-align:left">可以</td><td>可以</td><td>windows主机DHCP服务器故障分配</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155537.png" alt="子网掩码1"></p><h2 id="常用子网">常用子网</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155378.png" alt="子网掩码2-常用"></p><h2 id="子网划分原理：">子网划分原理：</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155913.png" alt="子网掩码3-原理"></p><h2 id="三部划分子网">三部划分子网</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155553.png" alt="子网掩码4-三部划分子网"></p><h2 id="例题"><strong>例题</strong></h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181155112.png" alt="子网掩码5-例题"></p><p>算块32-26=6，代表这个子网分成了6段，而每段的范围则为 2的6次方</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156231.png" alt="子网掩码5.1-例题"></p><h2 id="真题">真题</h2><blockquote><p>第一题：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156452.png" alt="超网划分"></p><p><font color='red'>主机位不能为全0和全1</font>超网划分(CIDR)：<br>202.145.27.0/24<br>202.145.29.0/24<br>202.145.31.0/24<br>202.145.33.0/24<br>汇总为一个超网地址为：<br>解：<br>因为是c类地址，所以看第三段化为二进制<br>27：0001 1011<br>29：0001 1101<br>31：0001 1111<br>33：0010 0001<br>这四个数前两位一样所以这两位就是由主机位变为网络的即：8+8+2=18，得出子网为18.<br>再把这四个数进行<font color='red'>与运算</font>即1与1=1,0与1=0,1与0=0，得出汇聚后的地址：<br>202.145.0000 0000.0/18<br>它的地址范围是202.145.0000 0000.0 - 202.145.0011 1111.255<br>0  63<br>得：202.145.0.0 - 202.145.63.255<br>汇聚之后的地址空间是原来地址空间的( )倍<br>因为汇聚之前一个C类有效地址是254<br>而汇聚后主机位有32-18=14位，其有效的地址范围(2^14-2)/254/4=16382/254/4=16</p></blockquote><h1>ARP</h1><blockquote><p>arp -a 查询所有arp地址</p><p>apr -s 静态绑定</p><p>arp -d 删除arp</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156611.png" alt="ARP"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156466.png" alt="ARP2"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156567.png" alt=""></p><h1>网络层路由协议</h1><h2 id="各各路由协议的路由优先级">各各路由协议的路由优先级</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156350.png" alt="各各路由协议的路由优先级"></p><p><img src="E:%5CTypora%5Cfile%5C%E8%BD%AF%E8%80%83.assets%5C%E7%BD%91%E7%BB%9C%E5%B1%82%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE.png" alt="网络层路由协议"></p><h2 id="RIP">RIP</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181156913.png" alt="RIP"></p><p>RIP1和RIP2的区别：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157877.png" alt="RIP1和RIP2的区别"></p><p>RIP防止环路的办法:</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157792.png" alt="RIP防止环路的办法"></p><h2 id="OSPF">OSPF</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157141.png" alt="OSPF"></p><p>区域类型：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157843.png" alt="ospf区域类型"></p><p>网络类型：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157642.png" alt="OSPF网络类型"></p><p>路由器类型：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157874.png" alt="OSPF路由器类型"></p><p>报文类型：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157200.png" alt="OSPF报文类型"></p><h1>TCP</h1><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157743.png" alt="TCP三次握手解析图"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157501.png" alt="TCP2重要字段"></p><p>各各协议端口：</p><p><img src="E:%5CTypora%5Cfile%5C%E8%BD%AF%E8%80%83.assets%5CTCP3%E7%AB%AF%E5%8F%A3.png" alt="TCP3端口"></p><p>TCP三次握手：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157514.png" alt="TCP4三次握手"></p><p>四次挥手</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181157308.png" alt="TCP6四次挥手"></p><p>拥塞控制：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158200.png" alt="TCP5拥塞控制"></p><p>超时重传计时器：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158958.png" alt="TCP8超时重传计时器"></p><p>慢启动：</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158356.png" alt="TCP7慢启动"></p><h2 id="总结">总结</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158087.png" alt="TCP总结"></p><h1>第十一章网络安全</h1><h2 id="计算机病毒">计算机病毒</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158319.png" alt="1"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158191.png" alt="9-计算机病毒"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158762.png" alt="2-网络安全信息数据五大特征"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158061.png" alt="3-网络安全基本技术"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158625.png" alt="4-对称和非对称"></p><h2 id="对称密钥总表">对称密钥总表</h2><blockquote><p>对称加密算法：DES、3DES、AES、IDEA、RC4</p><p>非对称加密算法： RSA、DH</p><p>哈希算法：MD5、SHA[]</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181158601.png" alt="5-对称密钥总结表"></p><h2 id="font-color-red-公钥的签名和加密体系示意图-font"><font color='red'>公钥的签名和加密体系示意图</font></h2><p><strong>必考</strong></p><p>数字签名使用自己的私钥</p><p>加密是使用接收方的公钥加密</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181159686.png" alt="7-公钥的签名和加密体系示意图"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181159867.png" alt="7-2"></p><h2 id="密钥管理体系">密钥管理体系</h2><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211181159901.png" alt="8-密钥管理体系"></p>]]></content>
      
      
      <categories>
          
          <category> 软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基础(持续更新中...)</title>
      <link href="/2022/11/17/Linux/"/>
      <url>/2022/11/17/Linux/</url>
      
        <content type="html"><![CDATA[<h1>Linux基础</h1><h2 id="1-‘’-“”-的介绍">1. ‘’ “” `` { } 的介绍</h2><blockquote><p>单引号：<font color='red'>变量和命令都不识别</font>。都当成普通的字符串 --最傻<br>双引号：<font color='red'>不能识别命令，可以识别变量</font> --半傻不精<br>反引号：<font color='red'>变量和命令都能识别</font></p><p>花括号：可以实现打印重复字符从的简化形式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">单引号、双引号、反引号的区别：</span></span><br><span class="line">[root@localhost ~]# echo &#x27;echo $HOSTNAME&#x27;</span><br><span class="line">echo $HOSTNAME</span><br><span class="line">[root@localhost ~]# echo &quot;echo $HOSTNAME&quot;</span><br><span class="line">echo localhost.localdomain</span><br><span class="line">[root@localhost ~]# echo `echo $HOSTNAME`</span><br><span class="line">localhost.localdomain</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">花括号：</span></span><br><span class="line">[root@localhost ~]# echo &#123;1..10&#125;</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br><span class="line">[root@localhost ~]# echo &#123;1..10..2&#125;</span><br><span class="line">1 3 5 7 9</span><br><span class="line">[root@localhost ~]# echo &#123;a..z&#125;</span><br><span class="line">a b c d e f g h i j k l m n o p q r s t u v w x y </span><br></pre></td></tr></table></figure></blockquote><h2 id="2-用户管理">2. 用户管理</h2><p><strong>useradd</strong>创建新用户</p><p>usermod修改用户</p><p>userdel删除用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-u指定UID</span><br><span class="line">-g指定GID</span><br><span class="line">-p指定创建用户的密码</span><br></pre></td></tr></table></figure><h2 id="3-文件权限">3. 文件权限</h2><blockquote><p>r 可使用文件查看类工具，比如：cat，可以获取其内容</p><p>w 可修改其内容,文件的是否被删除和文件的权限无关</p><p>x 可以把此文件提请内核启动为一个进程，即可以执行（运行）此文件（此文件的内容必须是可执行） 文件权限常见组合</p><p>– 0</p><p>r  4</p><p>r-x 5</p><p>rw 6</p><p>rwx 7</p></blockquote><p><strong>chmod修改权限</strong></p><h3 id="3-1-新建文件和目录的默认权限">3.1 新建文件和目录的默认权限</h3><p>umask的值可以用来保留在创建文件权限</p><p>实现方式：</p><ul><li>新建文件的默认权限：666-umask，如果所得某位存在执行(奇数)权限，则将其权限+1，偶数不变</li><li>新建目录的默认权限：777-umask</li></ul><p>非特权用户umask默认是：<font color='red'>002</font></p><p>root的umask默认是：<font color='red'>022</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# umask</span><br><span class="line">0022</span><br><span class="line">[root@localhost ~]# su - zhang</span><br><span class="line">上一次登录：二 9月 27 23:02:06 CST 2022pts/0 上</span><br><span class="line">[zhang@localhost ~]$ umask</span><br><span class="line">0002</span><br></pre></td></tr></table></figure><p>持久保存umask</p><ul><li>全局设置：/etc/bashrc全部用户包括root</li><li>用户设置：~/.bashrc       仅限当前用户</li></ul><p>案例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# touch zhang.txt</span><br><span class="line">[root@localhost ~]# ll</span><br><span class="line">-rw-r--r--. 1 root root    0 9月  28 01:38 zhang.txt</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认权限 666 减去root的<span class="built_in">umask</span> 022 666-022=644</span></span><br></pre></td></tr></table></figure><p>如果只实现临时性的文件权限为000</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">有三张方法：</span><br><span class="line">1、 touch a.txt; chmod 000 a.txt</span><br><span class="line">2、 umask 777; touch a.txt ; umask 022 #先修改umask的值，</span><br><span class="line">3、(umsk 777; touch a.txt) #小括号内的umask是一次性有效的</span><br></pre></td></tr></table></figure><h3 id="3-2-特殊权限">3.2 特殊权限</h3><ul><li>suid继承这个文件所有者的权限 4</li><li>sgid继承所属组的权限。在目录上，此目录中新建的文件的所属组将自动从此目录继承 2</li><li>sticky 粘滞位，用于目录上，此目录中的文件只能由自己删除，不能其他人删除 1</li></ul><p><strong>特殊属性</strong></p><p>设置文件的特殊属性，可以访问root用户误操作删除或修改文件</p><p>不能删除、改名，更改</p><blockquote><p>chattr +i file</p></blockquote><p>只能追加内容，不能删除，改名</p><blockquote><p>chattr +a file</p></blockquote><p>显示特定属性</p><blockquote><p>lsattr</p></blockquote><h2 id="4-vim">4. vim</h2><h3 id="4-1-基础模式">4.1 基础模式</h3><p><strong>插入模式：</strong></p><p><font color='red'>i、a     在光标出插入</font><br><font color='red'>o       换行插入</font><br><font color='red'>A       光标到行尾</font><br><font color='red'>I       光标到行首</font><br><font color='red'>O       在上一行插入</font></p><p><strong>扩展模式：</strong></p><p>:wq       保存并退出<br>:q!       强制退出，不保持<br><font color='red'>:X        给该文件加密</font><br><font color='red'>:!+命令   在vi界面执行命令</font><br><font color='red'>:r!+命令  读入命令的输出</font>，就是把命令的结果写入到该文件里</p><h3 id="4-2-地址定界"><strong>4.2 地址定界</strong></h3><p>格式:</p><blockquote><p><font color='red'>:start_pos,end_pos CMD</font></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="comment">#具体第#行，例如2表示第2行</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">,<span class="comment"># #从左侧#表示起始行，到右侧#表示结尾行</span></span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">,+<span class="comment"># #从左侧#表示的起始行，加上右侧#表示的行数，范例：2,+3 表示2到5行</span></span></span><br><span class="line">.   #当前行</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="comment">#最后一行</span></span></span><br><span class="line">.,$-1 #当前行到倒数第二行</span><br><span class="line"><span class="meta prompt_">% </span><span class="language-bash"><span class="comment">#全文, 相当于1,$</span></span></span><br><span class="line">/pattern/   #从当前行向下查找，直到匹配pattern的第一行,即:正则表达式</span><br><span class="line">/pat1/,/pat2/ #从第一次被pat1模式匹配到的行开始，一直到第一次被pat2匹配到的行结束</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">,/pat/     <span class="comment">#从指定行开始，一直找到第一个匹配pattern的行结束</span></span></span><br><span class="line">/pat/,$     #向下找到第一个匹配patttern的行到整个文件的结尾的所有行</span><br></pre></td></tr></table></figure><p>地址定界后跟一个编辑命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">y #复制</span><br><span class="line">w file #将范围内的行另存至指定文件中</span><br><span class="line">r file #在指定位置插入指定文件中的所有内容</span><br><span class="line"><span class="meta prompt_">t#</span><span class="language-bash">行号     将前面指定的行复制到<span class="comment">#行后</span></span></span><br><span class="line"><span class="meta prompt_">m#</span><span class="language-bash">行号     将前面指定的行移动到<span class="comment">#行后</span></span></span><br></pre></td></tr></table></figure><h3 id="4-3-查找并替换">4.3 查找并替换</h3><p>格式：</p><blockquote><p><font color='red'>s/要查找的内容/要替换的内容/修饰符</font></p></blockquote><p>说明：</p><blockquote><p>要查找的内容：可使用基本正则表达式模式<br>替换为的内容：不能使用模式，但可以使用\1, \2, …等后向引用符号；还可以使用“&amp;”引用前面查找时查 找到的整个内容</p></blockquote><p>修饰符：</p><blockquote><p>i #忽略大小写<br><font color='red'>g </font>#全局替换(贪婪模式)，默认情况下，每一行只替换第一次出现 （懒惰模式）<br>gc #全局替换，每次替换前询问</p></blockquote><p>查找替换中的分隔符/ 可以替换位其他字符比如：#，@</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">比如：</span></span><br><span class="line">s@/etc@/var@g</span><br><span class="line"><span class="meta prompt_">s#</span><span class="language-bash">/boot<span class="comment">#/#i</span></span></span><br></pre></td></tr></table></figure><h3 id="4-4-自定义vim工作特性">4.4 自定义vim工作特性</h3><p>扩展命令模式的配置只是对当前vim进程有效，可将配置存放在文件中持久保存</p><p>配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">/etc/vimrc #全局</span><br><span class="line">~/.vimrc #个人</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">自定义行号</span></span><br><span class="line">显示：set number，简写 set nu</span><br><span class="line">取消显示：set nonumber, 简写 set nonu</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">自动缩进</span></span><br><span class="line">启用：set autoindent，简写 set ai</span><br><span class="line">禁用：set noai</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">保留复制格式</span></span><br><span class="line">启用：set paste</span><br><span class="line">禁用：set nopaste</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示Tab ^I和换行符 和$显示</span></span><br><span class="line">启用：set list</span><br><span class="line">禁用：set nolist</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件格式</span></span><br><span class="line">启用windows格式：set fileformat=dos</span><br><span class="line">启用unix格式：set fileformat=unix</span><br><span class="line">简写 set ff=dos|unix</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Tab 用空格代替</span></span><br><span class="line">启用：set expandtab   默认为8个空格代替Tab</span><br><span class="line">禁用：set noexpandtab</span><br><span class="line">简写：set et </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Tab用指定空格的个数代替</span></span><br><span class="line">启用：set tabstop=# 指定#个空格代替Tab</span><br><span class="line">简写：set ts=4</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置缩进宽度</span></span><br><span class="line">向右缩进 命令模式&gt;&gt;</span><br><span class="line">向左缩进 命令模式&lt;&lt;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置缩进为4个字符</span></span><br><span class="line">启用：set cursorline，简写 set cul</span><br><span class="line">禁用：set nocursorline</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件加密</span></span><br><span class="line">启用： set key=password</span><br><span class="line">禁用： set key=</span><br></pre></td></tr></table></figure><h3 id="4-5-命令模式">4.5 命令模式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">退出vim</span></span><br><span class="line">ZZ  保存退出</span><br><span class="line">ZQ  不保存退出</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">光标跳转</span></span><br><span class="line">h:左</span><br><span class="line">L:右</span><br><span class="line">j:下</span><br><span class="line">k:上</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">单词间跳转</span></span><br><span class="line">w:下一个单词的词首</span><br><span class="line">e:当前或下一个单词的词尾</span><br><span class="line">b:当前或前一个单词的词首</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">当前页跳转</span></span><br><span class="line">H:页首</span><br><span class="line">M:页中间行</span><br><span class="line">L:页底</span><br><span class="line">zt:将光标所在当前行移动到屏幕顶端</span><br><span class="line">zz：将光标所在当前行移动屏幕中间</span><br><span class="line">zb:将光标所在当前行移动到屏幕底端</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">行首行尾跳转：</span></span><br><span class="line">^跳转至行首的第一个非空白字符</span><br><span class="line">O跳转至行首</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">跳转至行尾</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5-文件查找">5. 文件查找</h2><h3 id="5-1-find">5.1 find</h3><p><strong>find</strong>是实时查找工具，通过遍历指定路劲完成文件查找</p><p>特点：查找速度略慢、精确，可实时查找，查找条件丰富，可能只搜索用户具备读取和执行权限的目录</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#格式</span><br><span class="line">find -选项 [查找路径] [查找条件]</span><br><span class="line">查找路径:指定具体目标路径；默认为当前目录</span><br><span class="line">查找条件:指定的查找标准，可以是文件名、大小、类型、权限等；默认找出指定路径下的所有文件</span><br><span class="line">处理动作:对符合条件的文件操作，默认输出至屏幕</span><br></pre></td></tr></table></figure><h3 id="5-2-参数替换xargs">5.2 参数替换xargs</h3><h2 id="6-正则表达式">6. 正则表达式</h2><p>通配符通常用来处理文件名，正则表达式时处理文本内容中字符</p><p>正则表达式的元字符分类：字符匹配、匹配次数、位置锚定、分组</p><p><font color='red'>注：正则表达式放到 [ ]中括号里就不是原来的意思了</font></p><h3 id="6-1-字符匹配">6.1 字符匹配</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.匹配任意单个字符</span><br><span class="line">[]匹配指定范围内的任意单个字符，如：[zhang] [0-9] [z-a] [a-zA-Z]</span><br><span class="line">[^]匹配指定范围外的任意单个字符，如：[^zhang]</span><br><span class="line">[:alnum:]  匹配字母和数字</span><br><span class="line">[:alpha:]  代表任何英文大写字符</span><br><span class="line">[:lower:]  小写字母，相当于[a-z]</span><br><span class="line">[:upper:]  大小写字母</span><br><span class="line">[:blank:]  空白字符(空格和制表符)</span><br><span class="line">[:space:]  比blank的范围更广</span><br><span class="line">[:cntrl:]  不可打印的控制字符(退格、删除等)</span><br><span class="line">[:digit:]  十进制数字</span><br><span class="line">[:xdigit:] 十六进制数字</span><br><span class="line">[:graph:]  可打印的非空白字符</span><br><span class="line">[:print:]  可打印字符</span><br><span class="line">[:punct:]  标点符号</span><br><span class="line">\s匹配任何空白字符，包括空格、制表符等。等价于 [\f\r\t\v]</span><br><span class="line">\S匹配任何非空白字符。等价于[^\f\r\t\v]</span><br><span class="line">\w #匹配一个字母,数字,下划线,汉字,其它国家文字的字符，等价于[_[:alnum:]字]</span><br><span class="line">\W #匹配一个非字母,数字,下划线,汉字,其它国家文字的字符，等价于[^_[:alnum:]字]</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找出rc开头后面是.或0-6的文件。注意；.点在[]中括号里就表示.点</span></span><br><span class="line">[root@localhost ~]# ls /etc/ | grep &#x27;rc[.0-6]&#x27;</span><br><span class="line">rc0.d</span><br><span class="line">rc1.d</span><br><span class="line">rc2.d</span><br><span class="line">rc3.d</span><br><span class="line">rc4.d</span><br><span class="line">rc5.d</span><br><span class="line">rc6.d</span><br><span class="line">rc.d</span><br><span class="line">rc.local</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">匹配没有<span class="string">&quot;#和;&quot;</span>的行。[]中括号里<span class="comment">#;是或者的意思</span></span></span><br><span class="line">[root@localhost ~]# cat test.txt </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">line1</span></span><br><span class="line">line2</span><br><span class="line">[root@localhost ~]# grep -v &quot;[#;]&quot; test.txt </span><br><span class="line">line1</span><br><span class="line">line2</span><br></pre></td></tr></table></figure><h3 id="6-2-匹配次数">6.2 匹配次数</h3><p>用在要指定次数的字符前面，用于指定前面的字符要出现的次数</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*    匹配前面的字符任意次，包括次，贪婪模式:尽可能长的匹配，</span><br><span class="line">.*    任意长度的任意字符，相当于通配符里的*</span><br><span class="line">\?    匹配其前面的字符出现0次或1次，即：可有可无</span><br><span class="line">\+    匹配其前面的字符出现最少1次,即肯定有且 &gt;=1次</span><br><span class="line">\&#123;n\&#125;   匹配前面的字符n次</span><br><span class="line">\&#123;m,n\&#125; 匹配前面的字符至少m次，最多n次</span><br><span class="line">\&#123;,n\&#125;匹配前面的字符最多n次，&lt;=n</span><br><span class="line">\&#123;n,\&#125;  匹配前面的字符至少n次</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">取出IP地址</span></span><br><span class="line">[root@localhost ~]# ip add show ens160</span><br><span class="line">2: ens160: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:30:68:cd brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.1.10/24 brd 192.168.1.255 scope global noprefixroute ens160</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fe30:68cd/64 scope link noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">       </span><br><span class="line">[root@localhost ~]# ip add show ens160 |grep -o &#x27;[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;&#x27; |head -n1</span><br><span class="line">192.168.1.10</span><br><span class="line"></span><br><span class="line">[root@localhost ~]# cat test.txt </span><br><span class="line">google</span><br><span class="line">gooooooole</span><br><span class="line">gooooogle</span><br><span class="line">gogle</span><br><span class="line">ggle</span><br><span class="line">g00000000gle</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">匹配o出现了两次或以上</span></span><br><span class="line">[root@localhost ~]# grep &quot;gooo*gle&quot; test.txt </span><br><span class="line">google</span><br><span class="line">gooooogle</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">匹配 /etc/的/出现了一次或0次</span></span><br><span class="line">[root@centos8 ~]#echo /etc/ |grep &quot;/etc/\?&quot;</span><br><span class="line">/etc/</span><br><span class="line">[root@centos8 ~]#echo /etc |grep &quot;/etc/\?&quot;</span><br><span class="line">/etc</span><br></pre></td></tr></table></figure><h3 id="6-3-位置锚定">6.3 位置锚定</h3><p>位置锚定可以用于定位出现的位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;^[^$#]&#x27; /etc/fstab #命令解析</span><br><span class="line">第一个 ^ 表示行首</span><br><span class="line">第二个^ 排除的意思</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">行尾</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">就是<span class="comment">#号，没其他意思</span></span></span><br><span class="line">解释:第一个^去乘[]中括号里的$和#</span><br><span class="line">就是 ^$和^# 表示：空行和#开头，还有第二个^，表示排除所有总的意思就是:</span><br><span class="line">匹配不是空行和#号开头的行</span><br><span class="line"></span><br><span class="line">grep &#x27;^[^#]&#x27; /etc/fstab #命令解析</span><br><span class="line">第一个^ 行首 第二个^ 排除</span><br><span class="line">把#号开头的非空行排除了</span><br></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">^行首，最左侧</span><br><span class="line">$行尾，最右侧</span><br><span class="line">^$匹配空行</span><br><span class="line">^[[:space:]]*$ 空白行</span><br><span class="line">\&lt; 或 \b 词首锚定</span><br><span class="line">\&gt; 或 \b 词尾锚定</span><br><span class="line"></span><br><span class="line">#注意：单词是由字母、数字、下划线组成</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">排除空行和<span class="comment">#开头的行</span></span></span><br><span class="line">[root@localhost ~]# grep -v &#x27;[#]&#x27; /etc/fstab |grep -v &#x27;^$&#x27; </span><br><span class="line">[root@localhost ~]# grep &#x27;^[^$#]&#x27; /etc/fstab</span><br><span class="line">[root@centos8 ~]#grep -v &#x27;^$\|#&#x27; /etc/fstab</span><br><span class="line">[root@localhost ~]# grep &#x27;^[^#]&#x27; /etc/fstab </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在/etc/passwd里匹配root开头的行</span></span><br><span class="line">[root@localhost ~]# grep ^root /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-4-分组">6.4 分组()</h3><p>分组：()将多个字符捆绑在一起，当作一个整体处理，如\(root\)+</p><p>后向引用：分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名 方式为: \1, \2, \3, …</p><p>\1 表示从左侧起第一个左括号以及与之匹配右括号之间的模式所匹配到的字符 注意: \0 表示正则表达式匹配的所有字符</p><p>注意： <code>后向引用</code> 引用前面的分组括号中的模式所匹配字符，而非模式本身</p><h3 id="6-5-或者">6.5 或者</h3><p>或者: |</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">案例：</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">匹配不是空行和<span class="comment">#号的行</span></span></span><br><span class="line">[root@centos6 ~]#grep -v &#x27;^\(#\|$\)&#x27; /etc/fstab</span><br></pre></td></tr></table></figure><h3 id="6-6-扩展正则">6.6 扩展正则</h3><p><strong>字符匹配</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">. 任意单个字符</span><br><span class="line">[zhang]指定范围的字符</span><br><span class="line">[^zhang]不在指定范围的字符</span><br></pre></td></tr></table></figure><p><strong>次数匹配</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*匹配前面字符任意次</span><br><span class="line">?0或者1次</span><br><span class="line">&#123;n&#125;匹配n次</span><br><span class="line">&#123;m,n&#125; 至少m次，最多n次</span><br></pre></td></tr></table></figure><p><strong>位置锚定</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">^行首</span><br><span class="line">$行尾</span><br><span class="line">\&lt;,\b 语首</span><br><span class="line">\&lt;,、b 语尾</span><br></pre></td></tr></table></figure><h2 id="7-三剑客">7. 三剑客</h2><h3 id="7-1-grep">7.1 grep</h3><p>grep主要对文本的(正则表达式)行基于模式进行过滤</p><blockquote><p>作用：文本搜索工具，根据用户指定的“模式”对目标文本逐行进行匹配检测；打印匹配到的行</p><p>模式：由正则表达式字符及文本字符所编写的过滤条件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">常见选项：</span></span><br><span class="line">-m # 匹配n次后停止</span><br><span class="line">-v 显示不被pattern匹配的行，即取反</span><br><span class="line">-i 忽略字符大小写</span><br><span class="line">-n 显示匹配的行号</span><br><span class="line">-c 统计匹配的次数</span><br><span class="line">-o 只显示匹配到的内容</span><br><span class="line">-q 管你有没有匹配到，都不在屏幕上显示。</span><br><span class="line">-A # after, 后#行</span><br><span class="line">-B # before, 前#行</span><br><span class="line">-C # context, 前后各#行</span><br><span class="line">-e 实现多个选项间的逻辑or关系,如：grep –e ‘cat &#x27; -e ‘dog&#x27; file</span><br><span class="line">-w 匹配整个单词</span><br><span class="line">-E 使用ERE，相当于egrep</span><br><span class="line">-F 不支持正则表达式，相当于fgrep</span><br><span class="line">-P 支持Perl格式的正则表达式</span><br><span class="line">-f file 根据模式文件处理</span><br><span class="line">-r   递归目录，但不处理软链接</span><br><span class="line">-R   递归目录，但处理软链接</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示不带<span class="string">&quot;#&quot;</span>号的行</span></span><br><span class="line">[root@localhost ~]# grep -v &quot;#&quot; /etc/fstab </span><br><span class="line">/dev/mapper/rl-root     /                       xfs     defaults        0 0</span><br><span class="line">UUID=31781593-b293-4d54-8104-7115b0f8c6d1 /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/rl-swap     none                    swap    defaults        0 0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">取cpu核数</span></span><br><span class="line">[root@localhost ~]# grep -c  processor /proc/cpuinfo </span><br><span class="line">4</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">匹配含<span class="string">&quot;root&quot;</span>的行并显示行号</span></span><br><span class="line">[root@localhost ~]# grep -n root /etc/passwd</span><br><span class="line">1:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">10:operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">显示包含root的行和后面三行并显示行号</span></span><br><span class="line">[root@localhost ~]# grep -nA3 root /etc/passwd</span><br><span class="line">1:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2-bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3-daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4-adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">--</span><br><span class="line">10:operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">11-games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">12-ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">13-nobody:x:65534:65534:Kernel Overflow User:/:/sbin/nologin</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">找出文件相同的行</span></span><br><span class="line">[root@localhost ~]# cat a.sh </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">[root@localhost ~]# cat b.sh </span><br><span class="line">d</span><br><span class="line">b</span><br><span class="line">a</span><br><span class="line">g</span><br><span class="line">[root@localhost ~]# grep -f a.sh b.sh </span><br><span class="line">b</span><br><span class="line">a</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-2-sed">7.2 sed</h3><p><img src="E:%5CLinux%5CLinux-%E9%A9%AC%E5%93%A5.assets%5C202211161047962.png" alt="avatar"></p><p>sed是行编辑器，跟grep的区别是sed可以修改文件，而grep不行</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed 选项 &#x27;script;命令&#x27; 文件路径</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">常用选项：</span></span><br><span class="line">-n不自动打印</span><br><span class="line">-e多点编辑</span><br><span class="line">-f从指定文件中读取编辑脚本</span><br><span class="line">-i编辑文件 # -i.bak,后面跟了后缀就是备份文件并原处修改</span><br><span class="line">-s将多个文件视为单个文件，而不单个连续的长文件流</span><br><span class="line">-r 或 -E 使用扩展正则表达式</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">说明</span></span><br><span class="line">-ir   不支持</span><br><span class="line">-i -r 支持</span><br><span class="line">-ri   支持</span><br><span class="line">-ni   危险选项,会清空文件</span><br></pre></td></tr></table></figure><p><strong>script格式：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x27;地址命令&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">地址格式:</span></span><br><span class="line">1、不给地址就是对全文进行处理</span><br><span class="line">2、单地址: #:指定的行,$:最后一行</span><br><span class="line">3、地址范围:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">m,n从第m行到第n行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">m,+n3,+4表示从第三行到第7行</span></span><br><span class="line">4、步进: ~</span><br><span class="line">1~2 奇数行</span><br><span class="line">2~2 偶数行</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>命令</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">p 打印当前模式空间内容，追加到默认输出之后</span><br><span class="line">Ip 忽略大小写输出</span><br><span class="line">d 删除模式空间匹配的行，并立即启用下一轮循环</span><br><span class="line">a [\]text 在指定行后面追加文本，支持使用\n实现多行追加</span><br><span class="line">i [\]text 在行前面插入文本</span><br><span class="line">c [\]text 替换行为单行或多行文本</span><br><span class="line">w file 保存模式匹配的行至指定文件</span><br><span class="line">r file 读取指定文件的文本至模式空间中匹配到的行后</span><br><span class="line">= 为模式空间中的行打印行号</span><br><span class="line">! 模式空间中匹配行取反处理</span><br><span class="line">q           结束或退出sed</span><br></pre></td></tr></table></figure><p><strong>查找替换</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s/pattern/string/修饰符 查找替换,支持使用其它分隔符，可以是其它形式：s@@@，s###</span><br><span class="line">替换修饰符：</span><br><span class="line">g 行内全局替换</span><br><span class="line">p 显示替换成功的行</span><br><span class="line">w   /PATH/FILE 将替换成功的行保存至文件中</span><br><span class="line">I,i   忽略大小写</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭selinux</span></span><br><span class="line">sed -i &#x27;^SELINUX=/c SELINUX=disabled&#x27; /etc/selinux/config</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">只显示非<span class="comment">#开头的行</span></span></span><br><span class="line">[root@zhang ~]# sed -n &#x27;/^#/!p&#x27; /etc/fstab </span><br><span class="line">UUID=f90a0d2c-7d6c-4122-8c70-137b5ab7e23c /                       xfs     defaults </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认的sed会将输入信息直接输出，-n就关闭自动打印功能</span></span><br><span class="line">[root@zhang ~]# seq 10 |sed &#x27;3,5p&#x27;</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">[root@zhang ~]# seq 10 |sed -n &#x27;3,5p&#x27;</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="7-3-awk">7.3 awk</h3><h2 id="8-1-shell">8.1  shell</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">-eq 等于</span><br><span class="line">-ne 不等于</span><br><span class="line">-gt 大于</span><br><span class="line">-ge 大于等于</span><br><span class="line">-lt 小于</span><br><span class="line">-le 小于等于</span><br></pre></td></tr></table></figure><p><strong>脚本调试:</strong></p><ul><li>语法错误，会导致后续的命令不继续执行，可以用bash -n 检查错误，提示的出错行数不一定是准 确的</li><li>命令错误，默认后续的命令还会继续执行，用bash -n 无法检查出来 ，可以使用 bash -x 进行观察</li><li>逻辑错误：只能使用 bash -x 进行观察</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">cat</span> -A 检测文件的格式(文件中 $=空格)</span></span><br><span class="line">[root@hhh shell]# cat -A test.sh</span><br><span class="line">echo line1$</span><br><span class="line"><span class="meta prompt_">hostnam$</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="built_in">cat</span> &gt; test.txt &lt;&lt;<span class="string">EOF $</span></span></span><br><span class="line"><span class="meta prompt_">aaa$</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash">bbb$</span></span></span><br><span class="line"><span class="meta prompt_">ccc$</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash">EOF</span> $</span></span><br></pre></td></tr></table></figure><h3 id="8-2-变量">8.2 变量</h3><h4 id="8-2-1-命令要求">8.2.1 命令要求</h4><ul><li>区分大小写</li><li>不能使用程序中的保留字和内置变量：比如 if for while</li><li>只能使用数字、字母及下划线、且不能以数字开头</li></ul><p><strong>命令习惯</strong></p><ul><li>变量名大写、局部变量小写</li><li>函数名小写</li><li>大驼峰(每个单词首字母大写)和小驼峰</li><li>下划线</li></ul><p><strong>变量定义和引用</strong></p><p>变量的生效范围等标准划分变量类型，pstree命令查看shell进程</p><ul><li><p>普通变量：生效范围位仅当前shell进程，对其他和当前的子shell都无效</p></li><li><p>环境变量：生效范围位当前shell进程及其子进程</p></li><li><p>本地变量：本地变量：生效范围为当前shell进程中某代码片断，通常指函数</p></li></ul><p>弱引用和强引用</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">name和<span class="string">&#x27;$name&#x27;</span>的区别</span> </span><br><span class="line">[root@hhh shell]# echo $name</span><br><span class="line">zhang</span><br><span class="line">[root@hhh shell]# echo &#x27;$name&#x27;</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">name</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="8-3-运算相关">8.3 运算相关</h3><h4 id="8-3-1-算数运算">8.3.1  算数运算</h4><p>bash只支持整数，不支持小数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">实现算数运算</span></span><br><span class="line">(1) let var=算术表达式</span><br><span class="line">(2) ((var=算术表达式)) 和上面等价</span><br><span class="line">(3) var=[算术表达式]</span><br><span class="line">(4) var=((算术表达式))</span><br><span class="line">(5) var=$(expr arg1 arg2 arg3 ...)</span><br><span class="line">(6) declare -i var = 数值</span><br><span class="line">(7) echo &#x27;算术表达式&#x27; | bc </span><br></pre></td></tr></table></figure><p><strong>8.3.2  增强型赋值：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+= i+=10#相当于 i=i+10</span><br><span class="line">-= i-=j#相当于 i=i-j</span><br><span class="line">++ i++,++i#相当于 i=i+1</span><br><span class="line">-- i-- i--#相当于 i=i-1</span><br></pre></td></tr></table></figure><p>内建的随机数生成器变量：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">RANDOM取值范围:0-32767</span></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成0--49之间随机数</span></span><br><span class="line">[root@hhh ~]# echo $[$RANDOM%50]</span><br><span class="line">34</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">随机字体颜色</span></span><br><span class="line">[root@centos8 ~]#echo -e &quot;\033[1;$[RANDOM%7+31]mhello\033[0m&quot;</span><br><span class="line">magedu</span><br></pre></td></tr></table></figure><h4 id="8-3-3-逻辑运算">8.3.3  逻辑运算</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">true,false</span><br><span class="line">1 真</span><br><span class="line">0 假</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">与: &amp;: 准则就是一假全假，全真才真</span></span><br><span class="line">0 与 0 = 0</span><br><span class="line">0 与 1 = 0</span><br><span class="line">1 与 0 = 0</span><br><span class="line">1 与 1 = 1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或: | : 一真则真,全假才假</span></span><br><span class="line">0 或 0 = 0</span><br><span class="line">0 或 1 = 1</span><br><span class="line">1 或 0 = 1</span><br><span class="line">1 或 1 = 1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">非: ! : 取相反</span></span><br><span class="line">! 1 = 0   !  true</span><br><span class="line">! 0 = 1 !  false</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">异或: ^  相同为假，不同为真</span></span><br><span class="line">0 ^ 0 = 0</span><br><span class="line">0 ^ 1 = 1</span><br><span class="line">1 ^ 0 = 1</span><br><span class="line">1 ^ 1 = 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="8-3-4-短路运算">8.3.4  短路运算</h4><p>用的最多：</p><blockquote><p><font color='red'>CMD1 &amp;&amp; CMD2 || CMD3</font></p><ul><li><p>短路与 和 或组合</p><p>当CMD1执行成功时,会执行CMD2</p><p>当CMD1执行失败时,会执行CMD3</p><p>注意： CMD1 || CMD2 &amp;&amp; CMD3 逻辑不通,不使用</p></li></ul></blockquote><ul><li><p>短路与&amp;&amp;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CMD1 &amp;&amp; CMD2</span><br><span class="line">第一个CMD1结果为真(1)，第二个CMD2必须要参与运算，才能得到最终的结果</span><br><span class="line">第一个CMD1结果为假(0)，总的结果必定为0，因此不需要执行CMD2</span><br></pre></td></tr></table></figure></li><li><p>短路或    ||</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CMD1 || CMD2</span><br><span class="line">第一个CMD1结果为真(1)，总的结果必定为1，因此不需要执行CMD2</span><br><span class="line">第一个CMD1结果为假(0)，第二个CMD2 必须要参与运算,才能得到最终的结果</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-4-条件测试">8.4 条件测试</h3><p>条件测试命令：</p><ul><li>test</li><li>[ ]#和test等价，建议使用[ ]</li><li>[[ ]] 增强版的[ ]，支持[ ]的用法且支持扩展正则表达式和通配符</li></ul><p><strong>注意：在中括号和花括号{}里，左右两边必须要有空格</strong>，要使用正则或通配符使用[[ ]]</p><p><strong>字符串测试</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">test</span>和[ ] 字符串测试用法：</span></span><br><span class="line">-z#字符串是否为空，空为0不空1</span><br><span class="line">-n#字符串是否不空，不空1空0</span><br><span class="line">string1 = string2 #是否相等，前后有空格</span><br><span class="line">!=不等于 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[[]]字符串测试用法：</span></span><br><span class="line">== 左侧字符串是否和右侧的PATTERN相同</span><br><span class="line"> 注意:此表达式用于[[ ]]中，PATTERN为通配符</span><br><span class="line">=~ 左侧字符串是否能够被右侧的正则表达式的PATTERN所匹配</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意: 此表达式用于[[ ]]中为扩展的正则表达式</span></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@hhh ~]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@hhh ~]# str=&quot;&quot;</span><br><span class="line">[root@hhh ~]# echo $?</span><br><span class="line">0</span><br><span class="line">[root@hhh ~]# [ -z &quot;str&quot; ]</span><br><span class="line">[root@hhh ~]# echo $?</span><br><span class="line">1</span><br><span class="line">[root@hhh ~]# [ -n &quot;str&quot; ]</span><br><span class="line">[root@hhh ~]# echo $?</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">[root@hhh ~]# str1=hhh</span><br><span class="line">[root@hhh ~]# str2=lll</span><br><span class="line">[root@hhh ~]# [ $str1 = $str2 ]</span><br><span class="line">[root@hhh ~]# echo $?</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">[root@hhh ~]# name=linux1</span><br><span class="line">[root@hhh ~]# [[ &quot;$name&quot; == linux* ]]</span><br><span class="line">[root@hhh ~]# echo $?</span><br><span class="line">0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">判断合法IP</span></span><br><span class="line">[root@centos8 ~]#IP=1.2.3.4</span><br><span class="line">[root@centos8 ~]#[[ &quot;$IP&quot; =~ ^([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;$ ]]</span><br><span class="line">[root@centos8 ~]#echo $?</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="8-5-文件测试">8.5 文件测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">存在性测试</span></span><br><span class="line">-e或-a 存在为真，否则为假(一般用-e)</span><br><span class="line">-b 是否存在且为块设备文件</span><br><span class="line">-c 是否存在且为字符设备文件</span><br><span class="line">-d 是否存在且为目录文件</span><br><span class="line">-f 是否存在且为普通文件</span><br><span class="line">-h或-L：存在且为符号链接文件</span><br><span class="line">-p 是否存在且为命令管道文件</span><br><span class="line">-s 是否存在且为套接字</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件权限测试(不熟):</span></span><br><span class="line">-r FILE：是否存在且可读</span><br><span class="line">-w FILE: 是否存在且可写</span><br><span class="line">-x FILE: 是否存在且可执行</span><br><span class="line">-u FILE：是否存在且拥有suid权限</span><br><span class="line">-g FILE：是否存在且拥有sgid权限</span><br><span class="line">-k FILE：是否存在且拥有sticky权限</span><br><span class="line">注意：最终结果由用户对文件的实际权限决定，而非文件属性决定</span><br></pre></td></tr></table></figure><h3 id="8-6-关于-和">8.6 关于( )和{ }</h3><blockquote><p>小括号()：会开启子shell,并且list中变量赋值及内部命令执行后,将不再影响后续的环境</p><p>花括号{}： 不会启子shell, 在当前shell中运行,会影响当前shell环境</p><p><font color='red'>注意：使用中括号和花括号两边要留空格</font></p></blockquote><p>范例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@hhh ~]# name=zhang;(echo $name;name=wang;echo $name);echo $name</span><br><span class="line">zhang</span><br><span class="line">wang</span><br><span class="line">zhang</span><br><span class="line">[root@hhh ~]# name=li;&#123; echo $name;name=huang;echo $name; &#125;;echo $name </span><br><span class="line">li</span><br><span class="line">huang</span><br><span class="line">huang</span><br></pre></td></tr></table></figure><h3 id="8-7-read">8.7 read</h3><p>shell中的read命令等同于python里的input</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">常见选项：</span></span><br><span class="line">-p指定要显示的提示</span><br><span class="line">-s静默输入，一般用于密码</span><br><span class="line">-n指定输入的字符长度为N个</span><br><span class="line">-d &#x27;结束符&#x27;输入结束符</span><br><span class="line">-ttimeout为N秒</span><br></pre></td></tr></table></figure><h3 id="8-8-shell的配置文件">8.8 shell的配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vim .vimrc vim的个人配置文件</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全局配置：针对所有用户皆有效</span></span><br><span class="line">/etc/profile</span><br><span class="line">/etc/profile.d/*.sh</span><br><span class="line">/etc/bashrc</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">个人配置：只针对特定用户有效</span></span><br><span class="line">~/.bash_profile</span><br><span class="line">~/.bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改文件后生效两种方法：</span></span><br><span class="line">1、重启shell进程</span><br><span class="line">2、source</span><br></pre></td></tr></table></figure><h3 id="8-9-if">8.9 if</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">单分支</span></span><br><span class="line">if 判断条件;then</span><br><span class="line">条件为真的分支代码</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">双分支</span></span><br><span class="line">if 判断条件;then</span><br><span class="line">条件为真的分支代码</span><br><span class="line">else</span><br><span class="line">条件为假的分支代码</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">多分支</span></span><br><span class="line">if 判断条件1;thne</span><br><span class="line">条件1为真的分支代码</span><br><span class="line">elif 判断条件2; then</span><br><span class="line"> 条件2为真的分支代码</span><br><span class="line">elif 判断条件3; then</span><br><span class="line"> 条件3为真的分支代码</span><br><span class="line">……</span><br><span class="line">else</span><br><span class="line"> 以上条件都为假的分支代码</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意：多个条件时，主管条件进行判断，第一次遇为<span class="string">&quot;真&quot;</span>条件时，主席其分支，而后结束整个<span class="keyword">if</span>语句，<span class="keyword">if</span>语句可嵌套</span></span><br></pre></td></tr></table></figure><h3 id="8-10-while">8.10  while</h3><h3 id="8-11-脚本工具">8.11  脚本工具</h3><h4 id="8-11-1-expect">8.11.1 expect</h4><p>expect 是交互式转化批处理工具 expect，借助expect处理交互的命令，可以将交互过程如：ssh登录，ftp登录等写在一个脚本上，使之自动化完成。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装expect及mkpasswd工具</span></span><br><span class="line">[root@localhost ~]# yum -y install expect</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mkpasswd是自动生成密码，如: -l 是生成几位数, -d 是几个数字， -C 是几个大写字母</span></span><br><span class="line">[root@localhost ~]# mkpasswd  -l 16 -d 4 -C 6</span><br><span class="line">J0tJ667tHIhtgTM&#123;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">expect用法：</span></span><br><span class="line">选项：</span><br><span class="line">-c从命令行执行expect脚本，默认expect是交互地执行的</span><br><span class="line">-d可以调试信息</span><br><span class="line">相关命令：</span><br><span class="line">-spawn启动新的进程</span><br><span class="line">-expect从进程接收字符串</span><br><span class="line">-send用于向进程发送字符串</span><br><span class="line">-interact允许用户交互</span><br><span class="line">-exp_continue 匹配多个字符串在执行动作后加此命令</span><br></pre></td></tr></table></figure><p><strong>案例：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">单分支语法</span></span><br><span class="line">[root@localhost ~]# expect </span><br><span class="line">expect1.1&gt; expect &quot;hi&quot; &#123;send &quot;You said hi\n&quot;&#125;</span><br><span class="line">hahahixixi</span><br><span class="line">You said hi</span><br><span class="line">匹配到hi后，会输出“you said hi”，并换行</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">shell中调用expect</span></span><br><span class="line">[root@localhost ~]# vim expect1.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">ip=$1</span><br><span class="line">user=$2</span><br><span class="line">password=$3</span><br><span class="line">expect &lt;&lt;EOF</span><br><span class="line">set timeout 20</span><br><span class="line">spawn ssh $user@$ip</span><br><span class="line">expect &#123;</span><br><span class="line">        &quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="line">        &quot;password&quot; &#123; send &quot;$password\n&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;useradd jjj\n&quot; &#125;</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;echo magedu |passwd --stdin hehe\n&quot; &#125;</span><br><span class="line">expect &quot;]#&quot; &#123; send &quot;exit\n&quot; &#125;</span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">: shell脚本利用循环调用expect在CentOS和Ubuntu上批量创建用户</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/basjh</span></span><br><span class="line">NET=10.0.0</span><br><span class="line">user=root</span><br><span class="line">password=magedu</span><br><span class="line">IPLIST=&quot;</span><br><span class="line">范例：</span><br><span class="line">7</span><br><span class="line">18</span><br><span class="line">101</span><br><span class="line">&quot;</span><br><span class="line">for ID in $IPLIST;do</span><br><span class="line">ip=$NET.$ID</span><br><span class="line">expect &lt;&lt;EOF</span><br><span class="line">set timeout 20</span><br><span class="line">spawn ssh $user@$ip</span><br><span class="line">expect &#123;</span><br><span class="line">        &quot;yes/no&quot; &#123; send &quot;yes\n&quot;;exp_continue &#125;</span><br><span class="line">        &quot;password&quot; &#123; send &quot;$password\n&quot; &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect &quot;#&quot; &#123; send &quot;useradd test\n&quot; &#125;</span><br><span class="line">expect &quot;#&quot; &#123; send &quot;exit\n&quot; &#125;</span><br><span class="line">expect eof</span><br><span class="line">EOF</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="8-12-数组">8.12  数组</h3><p>变量：存储单个元素的内存空间</p><p>数组：存储多个元素的连续的内存空间，相当于多个变量的集合</p><p>数组名和索引：</p><ul><li>索引的编号是从0开始，属于数值索引</li><li>索引可支持使用自定义的格式，而不是数值格式，即为关联索引.</li><li>bash的输出支持稀疏格式(索引不连续)</li></ul><p><strong>声明数组：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">普通数组可以不事先声明，直接使用</span></span><br><span class="line">declare -a ARRAY_NAME</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">关联数组必须先声明，再使用</span></span><br><span class="line">declare -A ARRAY_NAME</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意:两者不可相互转换</span></span><br></pre></td></tr></table></figure><h3 id="8-总结">8.  总结</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">bash -n #检查脚本语法错误</span><br><span class="line">bash -x #检查脚本命令错误和逻辑错误</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">name和<span class="string">&#x27;$name&#x27;</span>的区别</span></span><br><span class="line">三种变量的生效范围</span><br><span class="line">pstree命令 #查看bash中的进程关系</span><br><span class="line">set #显示已定义的所有变量 unset删除</span><br><span class="line">printf #增强版的echo，实现丰富的格式化输出</span><br><span class="line">条件测试</span><br><span class="line">()和&#123;&#125;的区别</span><br><span class="line">read等同于python里的input</span><br></pre></td></tr></table></figure><h2 id="9-磁盘和存储管理">9. 磁盘和存储管理</h2><p>给虚拟机添加磁盘出的问题记录：添加SCSI硬盘重启会重装系统</p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161055602.png" alt="image-20221013092907752"></p><p>总结：原来虚拟机是硬盘是nvme，添加SCSI硬盘会导致系统重装，</p><p>解决方法：在BIOS界面调整磁盘引导顺序</p><h3 id="9-1-分区方式"><strong>9.1 分区方式</strong></h3><p>两种分区方式：<font color='red'>MBR、GPT</font></p><p>MBR：Master Boot Record，1982年，使用32位表示扇区数，分区不超过2T</p><p>MBR分区中一块硬盘最多有4个主分区，也可以3主分区+1扩展(N个逻辑分区) MBR分区：主和扩展分区对应的1–4，/dev/sda3，逻辑分区从5开始，/dev/sda5</p><p>GPT：GUID（Globals Unique Identifiers） partition table 支持128个分区，使用64位，支持8Z（ 512Byte/block ）64Z （ 4096Byte/block）</p><p><strong>管理分区</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">列出块设备</span></span><br><span class="line">[root@hhh ~]# lsblk </span><br><span class="line">NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0    2G  0 disk </span><br><span class="line">└─sda1        8:1    0    2G  0 part </span><br><span class="line">sr0          11:0    1 10.5G  0 rom  </span><br><span class="line">nvme0n1     259:0    0   40G  0 disk </span><br><span class="line">├─nvme0n1p1 259:1    0    1G  0 part /boot</span><br><span class="line">└─nvme0n1p2 259:2    0   39G  0 part </span><br><span class="line">  ├─rl-root 253:0    0   37G  0 lvm  /</span><br><span class="line">  └─rl-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建分区命令</span></span><br><span class="line">fdisk 管理MBR分区</span><br><span class="line">gdisk 管理GPT分区</span><br><span class="line">parted 高级分区操作，可以是交互或非交互方式(小心使用)</span><br></pre></td></tr></table></figure><p><strong>分区工具fdisk和gdisk</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l [-u] [device...]     查看分区</span><br><span class="line">fdisk [device...]             管理MBR分区</span><br><span class="line">gdisk [device...]             类fdisk 的GPT分区工具</span><br><span class="line"></span><br><span class="line">#子命令：pnw</span><br><span class="line">p 分区列表</span><br><span class="line">t 更改分区类型</span><br><span class="line">n 创建新分区</span><br><span class="line">d 删除分区</span><br><span class="line">v 校验分区</span><br><span class="line">u 转换单位</span><br><span class="line">w 保存并退出</span><br><span class="line">q 不保存并退出</span><br></pre></td></tr></table></figure><h3 id="9-2-文件系统类型">9.2 文件系统类型</h3><p><strong>常见的文件系统类型</strong></p><ul><li>ext4：是 ext 文件系统的最新版。提供了很多新的特性，包括纳秒级时间戳、创建和使用巨型文件 (16TB)、最大1EB的文件系统，以及速度的提升</li><li>xfs：SGI，支持最大8EB的文件系统</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Windows 常用文件系统</span></span><br><span class="line">FAT32 、NTFS、exFAT</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Unix：</span></span><br><span class="line">FFS（fast） 、UFS（unix）、 JFS2 </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">网络文件系统：</span></span><br><span class="line">NFS、CIFS</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">集群文件系统：</span></span><br><span class="line">GFS2、OCFS2（oracle）</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">分布式文件系统：fastdfs</span></span><br><span class="line">ceph、moosefs、mogilefs、glusterfs、Lustre</span><br></pre></td></tr></table></figure><p><strong>创建文件系统 mkfs</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mkfs命令选项：</span></span><br><span class="line">-t &#123;ext2|ext3|ext4|xfs&#125; 指定文件系统类型</span><br><span class="line">-b &#123;1024|2048|4096&#125; 指定块 block 大小</span><br><span class="line">-L ‘LABEL’ 设置卷标</span><br><span class="line">-j 相当于 -t ext3， mkfs.ext3 = mkfs -t ext3 = mke2fs -j = mke2fs -t ext3</span><br><span class="line">-i  # 为数据空间中每多少个字节创建一个inode；不应该小于block大</span><br><span class="line">小</span><br><span class="line">-N  # 指定分区中创建多少个inode</span><br><span class="line">-I 一个inode记录占用的磁盘空间大小，128---4096</span><br><span class="line">-m  # 默认5%,为管理人员预留空间占总空间的百分比</span><br><span class="line">-O FEATURE[,...] 启用指定特性</span><br><span class="line">-O ^FEATURE 关闭指定特性</span><br><span class="line"></span><br><span class="line">[root@hhh ~]# mkfs.</span><br><span class="line">mkfs.cramfs  mkfs.ext3    mkfs.minix   </span><br><span class="line">mkfs.ext2    mkfs.ext4    mkfs.xfs </span><br><span class="line">[root@hhh ~]# mkfs.ext4 /dev/sda </span><br><span class="line">mke2fs 1.45.6 (20-Mar-2020)</span><br><span class="line"> /dev/sda 有一个 ext4 文件系统</span><br><span class="line">上一次挂载于Thu Oct 13 11:08:34 2022</span><br><span class="line">Proceed anyway? (y,N) n</span><br></pre></td></tr></table></figure><p><strong>查看和管理分区信息 blkid</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">blkid 可以查看块设备属性信息</span></span><br><span class="line">[root@hhh ~]# blkid /dev/sda </span><br><span class="line">/dev/sda: UUID=&quot;b70ff07c-88a5-44a6-80a7-d1d3b5948945&quot; BLOCK_SIZE=&quot;4096&quot; TYPE=&quot;ext4&quot;</span><br></pre></td></tr></table></figure><h3 id="9-3-挂载">9.3 挂载</h3><p>挂载(mount)：将额外文件系统与根文件系统某现存的目录建立起关联关系，进而使得此目录做为其它文件访问入 口的行为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mount 常用命令选项</span></span><br><span class="line">-t fstype 指定要挂载的设备上的文件系统类型,如:ext4,xfs</span><br><span class="line">-r readonly，只读挂载</span><br><span class="line">-w read and write, 读写挂载,此为默认设置,可省略</span><br><span class="line">-n 不更新/etc/mtab，mount不可见</span><br><span class="line">-a 自动挂载所有支持自动挂载的设备(定义在了/etc/fstab文件中，且挂载选项中有</span><br><span class="line">auto功能)</span><br><span class="line">-L &#x27;LABEL&#x27; 以卷标指定挂载设备</span><br><span class="line">-U &#x27;UUID&#x27; 以UUID指定要挂载的设备</span><br><span class="line">-B, --bind 绑定目录到另一个目录上</span><br></pre></td></tr></table></figure><p><strong>挂载规则</strong>：</p><ul><li>一个挂载点同一时间只能挂载一个设备</li><li>一个挂载点同一时间挂载了多个设备，只能看到最后一个设备的数据，其它设备上的数据将被隐藏</li><li>一个设备可以同时挂载到多个挂载点</li><li>通常挂载点一般是已存在空的目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">umount：可卸载设备和挂载点</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">df</span>：查看挂载情况</span></span><br></pre></td></tr></table></figure><h3 id="9-4-永久挂载">9.4 永久挂载</h3><p>将挂载保存到<font color='red'> /etc/fstab</font> 中可以下次开机时，自动启用挂载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设备名可以 <span class="built_in">df</span>查看    UUID用blkid查看</span></span><br><span class="line">[root@hhh ~]# vim /etc/fstab</span><br><span class="line">UUID=b70ff07c-88a5-44a6-80a7-d1d3b5948945 /mnt/ ext4 defaults 0 0</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">每行定义一个要挂载的文件系统,，其中包括共 6 项</span></span><br><span class="line">要挂载的设备或伪文件系统</span><br><span class="line">1、设备文件</span><br><span class="line"> LABEL：LABEL=&quot;&quot;</span><br><span class="line"> UUID：UUID=&quot;&quot;</span><br><span class="line"> 伪文件系统名称：proc, sysfs</span><br><span class="line">2、挂载点：必须是事先存在的目录</span><br><span class="line">3、文件系统类型：ext4，xfs，iso9660，nfs，none</span><br><span class="line">4、挂载选项：defaults ，acl，bind，设置挂载设备的权限一般不用</span><br><span class="line">5、转储频率：0：不做备份 1：每天转储 2：每隔一天转储</span><br><span class="line">6、fsck检查的文件系统的顺序：允许的数字是0 1 2</span><br><span class="line">o：不自检 ，1：首先自检；一般只有rootfs才用 2：非rootfs使用</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加新的挂载项，想要立即生效使用：</span></span><br><span class="line">mount -a</span><br></pre></td></tr></table></figure><h3 id="9-5-swap交换分区">9.5 swap交换分区</h3><p>swap的作用：当内存不够时，会使用swap，但使用swap会影响性能，部署k8时会禁用掉，(用的很少，所有会禁用就行了）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">禁用两个方法：</span></span><br><span class="line">swapoff + 设备名；</span><br><span class="line">永久禁用进配置文件注释掉</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先查看swap的名称</span></span><br><span class="line">[root@hhh ~]# swapon -s</span><br><span class="line">文件名类型大小已用权限</span><br><span class="line">/dev/dm-1                              partition21258200-2</span><br><span class="line">[root@hhh ~]# free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          1.7Gi       211Mi       1.3Gi       8.0Mi       225Mi       1.4Gi</span><br><span class="line">Swap:         2.0Gi          0B       2.0Gi</span><br><span class="line">[root@hhh ~]# swapoff /dev/dm-1 </span><br><span class="line">[root@hhh ~]# free -h</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:          1.7Gi       210Mi       1.3Gi       8.0Mi       224Mi       1.4Gi</span><br><span class="line">Swap:            0B          0B          0B</span><br></pre></td></tr></table></figure><h3 id="9-6-dd磁盘测试工具">9.6 dd磁盘测试工具</h3><p>(暂时不学)</p><h3 id="9-7-RAID">9.7 RAID</h3><p>独立硬盘冗余阵列，简称磁盘阵列(RAID)</p><p><strong>RAID0</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161056798.png" alt="image-20221014102814375"></p><ul><li><p>优点：<font color='red'>RAID0具有低成本、高读写性能、100%的高存储空间利用率</font></p></li><li><p>缺点：没冗余，数据丢了就丢了</p></li></ul><blockquote><p>总结：<font color='red'>读写性能提升、利用率100%、最少两块硬盘</font>(实际一块也行，但没必要)</p><p>一般适用于对性能要求严格但对数据安全性和可靠性不高的应用，如视频、音频存储、临时数据缓存空间等</p></blockquote><p>**RAID1<img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161057420.png" alt="image-20221014102827087"></p><p>RAID0称为镜像</p><ul><li>优点：能备份数据</li><li>缺点：贵、写入会受影响、读会有点提升</li></ul><blockquote><p>总结：读有提示，写会受影响，磁盘利用率50%，最少两块</p><p>应用于对顺序读写性能要求高以及对数据保护极为重视的应用，如对邮件系统的数据保护。</p></blockquote><p>**RAID4<img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161057386.png" alt="image-20221014104145629"></p><p>RAID4与RAID3的区别在于<font color='red'>条带化的方式不同</font>，RAID3是位校验的数据条带而RAID4是按照块的方式来组织数据，可以保证单块的完整性，可以避免受到其他磁盘上同条带产生的不利影响。</p><blockquote><p>Ap=A1+A2+A3<br>假如A1坏了，就可以用校验盘Disk3把A1修复:A1=Ap-A2-A3</p><p>总结：(不常用)<br>多块数据盘异或运算值存于专用校验盘<br><font color='red'>磁盘利用率 (N-1)/N、有冗余能力、至少3块硬盘才可以实现</font></p><p>RAID4校验盘坏的几率比数据盘的大,所有用的很少</p></blockquote><p><strong>RAID5</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161605299.png" alt="image-20221014105446471"><br>RAID5 应该是目前最常见的</p><blockquote><p>读、写性能提升<br>磁盘利用率： (n-1)/n<br>有容错能力：允许最多1块磁盘损坏<br>最少磁盘数：3, 3+</p></blockquote><p><strong>RAID6</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161058372.png" alt="image-20221014110351518"></p><p>RAID5的升级版，比RAID5多了一块校验盘</p><blockquote><p>双份校验位,算法更复杂<br>读、写性能提升<br>磁盘利用率：(n-2)/n<br>有容错能力：允许最多2块磁盘损坏<br>最少磁盘数：4, 4+</p></blockquote><p><strong>RAID-01和RAID-10</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161058285.png" alt="image-20221014110629637"></p><blockquote><p>读、写性能提升<br>磁盘利用率：50%<br>有容错能力：每组镜像最多只能坏一块<br>最少磁盘数：4, 4+</p><p>RAID-01：多块磁盘先实现RAID0，在组合成RAID1</p></blockquote><p><strong>RAID-50</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161059194.png" alt="image-20221014111111348"></p><p>多块磁盘先实现RAID5，再组合成RAID0</p><p><strong>JBOD</strong></p><p>只是一堆磁盘(家用)，功能：将多块磁盘的空间合并一个大的使用</p><p><strong>RAID总结：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161059233.png" alt="image-20221014111829551"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161059468.png" alt="image-20221014111842284"></p><h2 id="9-8-逻辑卷管理-LVM">9.8  逻辑卷管理(LVM)</h2><p>​   VM是逻辑卷管理的简称，它是建立再物理内存设备之上的一个抽象层，允许你生成逻辑存储卷，与直接使用物理内存在管理上相比，提高更好灵活性</p><blockquote><p>LVM与直接使用物理存储相比,有以下优点:<br>1、灵活的容量.<br>当使用逻辑卷时,文件系统可以扩展到多个磁盘上,你可以聚合多个磁盘或磁盘分区成单一的逻辑卷.<br>2、可伸缩的存储池.<br>可以使用简单的命令来扩大或缩小逻辑卷大小,不用重新格式化或分区磁盘设备.<br>3、在线的数据再分配.<br>可以在线移动数据,数据可以在磁盘在线的情况下重新分配.比如,你可以在线更换可热插拔的磁盘.<br>4、方便的设备命名<br>逻辑卷可以按你觉得方便的方式来起任何名称.<br>5、磁盘条块化.<br>可以生成一个逻辑盘,它的数据可以被条块化存储在2个或更多的磁盘上.这样可以明显提升数据吞吐量.<br>6、镜像卷<br>逻辑卷提供方便的方法来镜像你的数据.<br>7、卷快照<br>使用逻辑卷,你可以获得设备快照用来一致性备份或者测试数据更新效果而不影响真实数据.</p></blockquote><p><strong>9.8.1  创建和管理LVM</strong></p><p>逻辑卷的基本组成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、物理卷(PV):一个可存储LVM的块设备如硬盘分区(MBR,GPT分区)</span><br><span class="line">2、卷组(VG):卷组是对一个或多个物理卷的集合</span><br><span class="line">3、逻辑卷(LV):是可提供系统使用的最终元设备，在卷组中创建和管理，有物理块组成，实际就是一个虚拟分区</span><br><span class="line">4、物理块(PE):一个卷组中最新的连续分区(默认未4MB)，多个物理块将被分配给一个逻辑卷</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vgcreat -s 16  testvg0 /dev/sd&#123;a1,b&#125;</span></span><br><span class="line">-s就是修改PE的大小</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161059908.png" alt="image-20221014114636480"></p><p><img src="https://cdn.jsdelivr.net/gh/wqingzy/blog-img/img/202211161101343.png" alt="image-20221017100159822"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建逻辑卷之前要先分好区</span></span><br><span class="line">[root@hhh ~]# lsblk </span><br><span class="line">NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0    2G  0 disk </span><br><span class="line">sdb           8:16   0    2G  0 disk </span><br><span class="line">sr0          11:0    1 10.5G  0 rom  </span><br><span class="line">nvme0n1     259:0    0   40G  0 disk </span><br><span class="line">├─nvme0n1p1 259:1    0    1G  0 part /boot</span><br><span class="line">└─nvme0n1p2 259:2    0   39G  0 part </span><br><span class="line">  ├─rl-root 253:0    0   37G  0 lvm  /</span><br><span class="line">  └─rl-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line">[root@hhh ~]# fdisk /dev/sda</span><br><span class="line">n p t(更改硬盘ID) 8e</span><br><span class="line">命令(输入 m 获取帮助)：t</span><br><span class="line">已选择分区 1</span><br><span class="line">Hex 代码(输入 L 列出所有代码)：8e</span><br><span class="line">已将分区“Linux”的类型更改为“Linux LVM”。</span><br><span class="line">[root@hhh ~]# lsblk </span><br><span class="line">NAME        MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class="line">sda           8:0    0    2G  0 disk </span><br><span class="line">└─sda1        8:1    0    2G  0 part </span><br><span class="line">sdb           8:16   0    2G  0 disk </span><br><span class="line">sr0          11:0    1 10.5G  0 rom  </span><br><span class="line">nvme0n1     259:0    0   40G  0 disk </span><br><span class="line">├─nvme0n1p1 259:1    0    1G  0 part /boot</span><br><span class="line">└─nvme0n1p2 259:2    0   39G  0 part </span><br><span class="line">  ├─rl-root 253:0    0   37G  0 lvm  /</span><br><span class="line">  └─rl-swap 253:1    0    2G  0 lvm  [SWAP]</span><br><span class="line"></span><br><span class="line">1、#用PV命令将硬盘变为物理卷</span><br><span class="line">[root@hhh ~]# pvcreate /dev/sd&#123;a1,b&#125;</span><br><span class="line">  Physical volume &quot;/dev/sda1&quot; successfully created.</span><br><span class="line">  Physical volume &quot;/dev/sdb&quot; successfully created.</span><br><span class="line">[root@hhh ~]# pvs</span><br><span class="line">  PV             VG Fmt  Attr PSize   PFree </span><br><span class="line">  /dev/nvme0n1p2 rl lvm2 a--  &lt;39.00g     0 </span><br><span class="line">  /dev/sda1         lvm2 ---   &lt;2.00g &lt;2.00g</span><br><span class="line">  /dev/sdb          lvm2 ---    2.00g  2.00g</span><br><span class="line"></span><br><span class="line">2、#用VG把物理卷变成物理卷组</span><br><span class="line">[root@hhh ~]# vgs</span><br><span class="line">  VG #PV #LV #SN Attr   VSize   VFree</span><br><span class="line">  rl   1   2   0 wz--n- &lt;39.00g    0 </span><br><span class="line">[root@hhh ~]# vgcreate testvg0 /dev/sd&#123;a1,b&#125;</span><br><span class="line">  Volume group &quot;testvg0&quot; successfully created</span><br><span class="line">[root@hhh ~]# pvs</span><br><span class="line">  PV             VG      Fmt  Attr PSize   PFree </span><br><span class="line">  /dev/nvme0n1p2 rl      lvm2 a--  &lt;39.00g     0 </span><br><span class="line">  /dev/sda1      testvg0 lvm2 a--   &lt;2.00g &lt;2.00g</span><br><span class="line">  /dev/sdb       testvg0 lvm2 a--   &lt;2.00g &lt;2.00g</span><br><span class="line"></span><br><span class="line">3、#用LV在物理卷组中分成一块空间来就是物理卷</span><br><span class="line">[root@hhh ~]# lvs</span><br><span class="line">  LV   VG Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root rl -wi-ao---- &lt;36.97g                                                    </span><br><span class="line">  swap rl -wi-ao----  &lt;2.03g                                                    </span><br><span class="line">[root@hhh ~]# lvcreate -L 3G -n lv-mysql testvg0</span><br><span class="line">  Logical volume &quot;lv-mysql&quot; created.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">格式化</span></span><br><span class="line">[root@hhh ~]# mkfs.ext4 /dev/testvg0/lv-mysql </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">永久挂载</span></span><br><span class="line">[root@hhh ~]# blkid /dev/testvg0/lv-mysql </span><br><span class="line">/dev/testvg0/lv-mysql: UUID=&quot;48eca6ff-669f-4e33-aed6-9d7be3c5c350&quot; BLOCK_SIZE=&quot;4096&quot; TYPE=&quot;ext4&quot;</span><br><span class="line">[root@hhh ~]# vim /etc/f8stab </span><br><span class="line">UUID=48eca6ff-669f-4e33-aed6-9d7be3c5c350 /root/mysql ext4 defaults 0 0</span><br><span class="line">[root@hhh ~]# mkdir mysql</span><br><span class="line">[root@hhh ~]# mount -a</span><br><span class="line">[root@hhh ~]# df -h </span><br><span class="line">文件系统                       容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                       874M     0  874M    0% /dev</span><br><span class="line">tmpfs                          893M     0  893M    0% /dev/shm</span><br><span class="line">tmpfs                          893M  8.8M  884M    1% /run</span><br><span class="line">tmpfs                          893M     0  893M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rl-root             37G  2.0G   36G    6% /</span><br><span class="line">/dev/nvme0n1p1                1014M  210M  805M   21% /boot</span><br><span class="line">tmpfs                          179M     0  179M    0% /run/user/0</span><br><span class="line">/dev/mapper/testvg0-lv--mysql  2.9G  9.0M  2.8G    1% /root/mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>9.8.2 逻辑卷的伸缩和扩容(未学)</strong></p><h3 id="9-9-总结">9.9 总结</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">添加好一块新硬盘后有三个步骤：</span><br><span class="line">1、分区fdisk</span><br><span class="line">2、选择文件系统类型mkfs</span><br><span class="line">3、挂载moount</span><br><span class="line">查看UUID blkid</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">df</span>和<span class="built_in">du</span>的区别 面试题</span></span><br><span class="line">df:查看挂载情况</span><br><span class="line">du:查看文件大小</span><br><span class="line">swap会禁用就行</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">RAID各个级别的优缺点、作用面试题</span></span><br><span class="line">逻辑卷的分区</span><br></pre></td></tr></table></figure><h2 id="10-rpm">10.  rpm</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rpm常用选项</span></span><br><span class="line">-ivh 安装</span><br><span class="line">-e卸载</span><br><span class="line">-q查看包名</span><br><span class="line">-qa列出所有安装好的包</span><br><span class="line">-ql+包名列出此包包括的文件列表</span><br><span class="line">-qc+包名列出次包中的配置文件</span><br><span class="line">-qi+包名包的说明：版本、安装时间，发行者，功能</span><br><span class="line">-qf+文件名查询此文件来自于那个包</span><br></pre></td></tr></table></figure><h2 id="11-yum">11.  yum</h2><p>阿里云镜像站：<a href="https://developer.aliyun.com/mirror/">https://developer.aliyun.com/mirror/</a></p><p>清华大学镜像站：<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a></p><p>yum安装失败的原因</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 yum 配置格式有错</span><br><span class="line">2 yum metadata过旧，yum clean all</span><br><span class="line">3 yum 源出问题，网络有问题</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">yum常用命令</span></span><br><span class="line">yum install|remove #下载或卸载</span><br><span class="line">yum list #显示所有已经安装和可以安装的程序包</span><br><span class="line">yum info #查看包的详细信息等同于 rpm -qi </span><br><span class="line">yum provides + 文件路径 #查看这个文件来自于那个包，编译安装用的多</span><br><span class="line">yum history #查看下载历史</span><br><span class="line">yum repoquory -l +包名 #查看未安装包的文件列表</span><br><span class="line">yum clean all #清除目录/var/cache/yum缓存</span><br><span class="line">yum makecache #构建缓存</span><br></pre></td></tr></table></figure><p><strong>11.1  yum源配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">必须的仓库 1、系统仓库 2、epel仓库</span></span><br><span class="line">Centos8: BaseOS APPStream</span><br><span class="line">Centos7: Base</span><br><span class="line"></span><br><span class="line">vim /etc/yum.repo.d/test.repo</span><br><span class="line">[BaseOS] #仓库的唯一标识，避免和其他仓库冲突</span><br><span class="line">name=BaseOS #仓库名字,随便</span><br><span class="line">baseurl=file:// </span><br><span class="line">        http://</span><br><span class="line">        https//</span><br><span class="line">        ftp://</span><br><span class="line">enabled=1 #1为启用此仓库，0是关闭</span><br><span class="line">gpgcheck=0 #是否校验此仓库(1为可用就要配置gpgkey，0为禁用，一般都是禁用)</span><br><span class="line">gpgkey=file:// </span><br><span class="line">        http://</span><br><span class="line">        https//</span><br><span class="line">        ftp://</span><br><span class="line">[APPStream]</span><br><span class="line">……</span><br><span class="line">[epel]</span><br><span class="line">name=EPEL</span><br><span class="line">baseurl=https://mirror.tuna.tsinghua.edu.cn/epel/$releasever/Everything/$basearch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">相关变量</span></span><br><span class="line">yum的repo配置文件中可用的变量：</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">releasever: 当前OS的发行版的主版本号，如：8，7，6</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">arch</span>: CPU架构，如：aarch64, i586, i686，x86_64等</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">basearch：系统基础平台；i386, x86_64</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">contentdir：表示目录，比如：centos-8，centos-7</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">YUM0-<span class="variable">$YUM9</span>:自定义变量</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意：yum仓库指向的路径一定必须是repodata目录所在目录</span></span><br></pre></td></tr></table></figure><h2 id="12-本地yum真实配置">12.  本地yum真实配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装自动挂载工具</span></span><br><span class="line">[root@localhost ~]# yum -y install autofs</span><br><span class="line">[root@localhost ~]# systemctl enable --now autofs</span><br><span class="line">[root@localhost ~]# mkdir /misc/cd</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在vmware上手动挂载光盘</span></span><br><span class="line">[root@localhost ~]# mount /dev/cdrom /misc/cd</span><br><span class="line">[root@localhost ~]# df -h</span><br><span class="line">文件系统             容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs             874M     0  874M    0% /dev</span><br><span class="line">tmpfs                893M     0  893M    0% /dev/shm</span><br><span class="line">tmpfs                893M  8.7M  884M    1% /run</span><br><span class="line">tmpfs                893M     0  893M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/rl-root   37G  2.0G   35G    6% /</span><br><span class="line">/dev/nvme0n1p1      1014M  210M  805M   21% /boot</span><br><span class="line">tmpfs                179M     0  179M    0% /run/user/0</span><br><span class="line">/dev/sr0              11G   11G     0  100% /misc/cd</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">然后再配置yum文件</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">马哥yum源配置文件，最后更新22.10.18</span></span><br><span class="line">[BaseOS]</span><br><span class="line">name=BaseOS</span><br><span class="line">baseurl=file:///misc/cd/BaseOS</span><br><span class="line">        https://mirrors.cloud.tencent.com/centos/8/BaseOS/x86_64/os/</span><br><span class="line">        https://mirrors.aliyun.com/centos/8/BaseOS/x86_64/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[AppStream]</span><br><span class="line">name=AppStream</span><br><span class="line">baseurl=file:///misc/cd/AppStream</span><br><span class="line">        https://mirrors.cloud.tencent.com/centos/8/AppStream/x86_64/os/</span><br><span class="line">        https://mirrors.aliyun.com/centos/8/AppStream/x86_64/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[epel]</span><br><span class="line">name=EPEL</span><br><span class="line">baseurl=https://mirror.tuna.tsinghua.edu.cn/epel/$releasever/Everything/$basearch</span><br><span class="line">        https://mirrors.cloud.tencent.com/epel/$releasever/Everything/$basearch</span><br><span class="line">        https://mirrors.huaweicloud.com/epel/$releasever/Everything/$basearch</span><br><span class="line">        https://mirrors.aliyun.com/epel/$releasever/Everything/$basearch</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[extras]</span><br><span class="line">name=extras</span><br><span class="line">baseurl=https://mirror.tuna.tsinghua.edu.cn/centos/$releasever/extras/$basearch/os</span><br><span class="line">        https://mirrors.cloud.tencent.com/centos/$releasever/extras/$basearch/os</span><br><span class="line">        https://mirrors.huaweicloud.com/centos/$releasever/extras/$basearch/os </span><br><span class="line">        https://mirrors.aliyun.com/centos/$releasever/extras/$basearch/os</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[PowerTools]</span><br><span class="line">name=CentOS- - PowerTools - mirrors.aliyun.com</span><br><span class="line">baseurl=https://mirror.tuna.tsinghua.edu.cn/centos/$releasever/PowerTools/$basearch/os/</span><br><span class="line">        https://mirrors.cloud.tencent.com/centos/$releasever/PowerTools/$basearch/os/</span><br><span class="line">        https://mirrors.huaweicloud.com/centos/$releasever/PowerTools/$basearch/os/</span><br><span class="line">        https://mirrors.aliyun.com/centos/$releasever/PowerTools/$basearch/os/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-Official</span><br></pre></td></tr></table></figure><h2 id="13-编译安装httpd">13.  编译安装httpd</h2><p><strong>C语言源代码编译安装过程</strong></p><p>利用编译工具，通常只需要三个大的步骤</p><ul><li>./configure</li><li>make</li><li>make install</li></ul><p>注意安装前可以通过查看README，INSTALL获取帮助</p><p><strong>准备相关的依赖包</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成实践：基于最小化安装的系统建议安装下面相关包</span></span><br><span class="line">yum install gcc make autoconf gcc-c++ glibc glibc-devel pcre pcre-devel openssl</span><br><span class="line">openssl-devel systemd-devel zlib-devel vim lrzsz tree tmux lsof tcpdump wget</span><br><span class="line">net-tools iotop bc bzip2 zip unzip nfs-utils man-pages</span><br></pre></td></tr></table></figure><p><strong>编译安装</strong></p><p>第一步：运行configure脚本，生成Makefile文件</p><p>其他选项主要功能：</p><ul><li><p>可以指定安装位置</p></li><li><p>指定启用的特性</p><blockquote><p>获取其他支持使用的选项<br>./configure --help<br>选项分类：</p><ul><li>安装路径设定<ul><li>–prefix=PATH:指定默认安装位置为/url/local</li><li>–sysconfdir=/PATH:配置文件安装位置<br>System types:支持交叉编译</li></ul></li></ul><p>注意：通常被编译操作依赖的程序包，需要安装此程序包的“开发”组件，其包名一般类似于name-devel-VERSION</p><p>第二步：make</p><p>第三步：make install</p></blockquote></li></ul><p>apache官网：<a href="https://httpd.apache.org/">Welcome! - The Apache HTTP Server Project</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">先下载源文件</span></span><br><span class="line">[root@localhost ~]# wget https://dlcdn.apache.org/httpd/httpd-2.4.54.tar.bz2</span><br><span class="line">[root@localhost httpd]# pwd</span><br><span class="line">/apps/httpd</span><br><span class="line">[root@localhost httpd]# tar xf httpd-2.4.54.tar.bz2 </span><br><span class="line">[root@localhost httpd-2.4.54]# ./configure --prefix=/usr/local/src/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">报错说没找到ARPconfigure: error: APR not found.  Please <span class="built_in">read</span> the documentation.</span></span><br><span class="line">其实编译安装报这种错很正常，一般在后面加个devel就行了</span><br><span class="line">[root@localhost httpd-2.4.54]# yum -y install apr-devel apr-util-devel</span><br><span class="line">[root@localhost httpd-2.4.54]# yum -y install gcc</span><br><span class="line">[root@localhost httpd-2.4.54]# yum -y install pcre-devel</span><br><span class="line">[root@localhost httpd-2.4.54]# ./configure --prefix=/usr/local/src/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">最后提示这种就编译安装完成了</span></span><br><span class="line">configure: summary of build options:</span><br><span class="line"></span><br><span class="line">    Server Version: 2.4.54</span><br><span class="line">    Install prefix: /usr/local/src/</span><br><span class="line">    C compiler:     gcc</span><br><span class="line">    CFLAGS:           -pthread  </span><br><span class="line">    CPPFLAGS:        -DLINUX -D_REENTRANT -D_GNU_SOURCE  </span><br><span class="line">    LDFLAGS:           </span><br><span class="line">    LIBS:             </span><br><span class="line">    C preprocessor: gcc</span><br><span class="line">[root@localhost httpd-2.4.54]# make</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">又报错gcc: error: /usr/lib/rpm/redhat/redhat-hardened-ld: No such file or directory</span></span><br><span class="line">解决方法：用yum provides +文件路径看看来自那个包！</span><br><span class="line">[root@localhost httpd-2.4.54]# yum provides /usr/lib/rpm/redhat/redhat-hardened-ld</span><br><span class="line">上次元数据过期检查：0:37:01 前，执行于 2022年10月18日 星期二 11时08分56秒。</span><br><span class="line">redhat-rpm-config-129-1.el8.noarch : Red Hat specific rpm configuration files</span><br><span class="line">仓库        ：AppStream</span><br><span class="line">匹配来源：</span><br><span class="line">文件名    ：/usr/lib/rpm/redhat/redhat-hardened-ld</span><br><span class="line">[root@localhost httpd-2.4.54]# yum -y install redhat-rpm-config</span><br><span class="line">[root@localhost httpd-2.4.54]# make -j 2  #解释：用两个处理器进行编译，速度能更快点</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>脚本安装httpd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/base</span></span><br><span class="line">cpu=`grep -c processor /proc/cpuinfo`</span><br><span class="line">httpd_version=2.4.54</span><br><span class="line">INSTALL_DIR=/apps/httpd</span><br><span class="line">COLOR=&quot;echo -e \E[32;1m&quot;</span><br><span class="line">END=&quot;\E[0m&quot;</span><br><span class="line"></span><br><span class="line">mkdir -p /apps/httpd</span><br><span class="line">yum -y install apr-devel apr-util-devel gcc pcre-devel redhat-rpm-config</span><br><span class="line">cd /usr/local/src</span><br><span class="line">rpm -q wget || yum -y install install wget</span><br><span class="line">wget https://dlcdn.apache.org/httpd/httpd-2.4.54.tar.bz2 || &#123; $COLOR &quot;下载失败&gt;，退出&quot;$END;exit; &#125;</span><br><span class="line"></span><br><span class="line">tar xf httpd-$httpd_version.tar.bz2</span><br><span class="line"></span><br><span class="line">cd httpd-$&#123;httpd_version&#125;</span><br><span class="line">./configure --prefix=INSTALL_DIR</span><br><span class="line"></span><br><span class="line">make -j $cpu &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">ls -n /apps/httpd/bin/apachectl /usr/local/bin</span><br><span class="line"></span><br><span class="line">apachectl start &amp;&amp; $COLRO&quot;安装成功！&quot;$END</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">COLOR<span class="string">&quot;请访问：http://`hostname -I`&quot;</span><span class="variable">$END</span></span></span><br></pre></td></tr></table></figure><h2 id="14-网络">14.  网络</h2><h3 id="14-1-网络配置">14.1  网络配置</h3><h4 id="14-1-1-Rocky8-6">14.1.1 Rocky8.6</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Centos8配置网络方法一：</span></span><br><span class="line">[root@localhost ~]# vim /etc/sysconfig/network-scripts/ifcfg-ens160 </span><br><span class="line">修改以下地方：</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.1.10</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.1.1</span><br><span class="line">DNS1=223.6.6.6</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">方法2：</span></span><br><span class="line">[root@localhost ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">DEVICE=ens160 </span><br><span class="line">NAME=ens160</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPADDR=192.168.1.10</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.1.1</span><br><span class="line">DNS1=223.6.6.6</span><br><span class="line">ONBOOT=yes</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Centos8重启网络配置命令 7是 systemctl restart network</span></span><br><span class="line">[root@localhost ~]# nmcli connection reload</span><br><span class="line">[root@localhost ~]# nmcli connection up ens160 </span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="14-1-2-Ubuntu22-10">14.1.2 Ubuntu22.10</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意这是20.04的配置，22版的配置有点差别</span></span><br><span class="line">network:</span><br><span class="line"> version: 2</span><br><span class="line"> renderer: networkd</span><br><span class="line"> ethernets:</span><br><span class="line">   eth0:</span><br><span class="line">     addresses: [192.168.8.10/24,10.0.0.10/8]  #或者用下面两行,两种格式不能混用</span><br><span class="line">      - 192.168.8.10/24</span><br><span class="line">      - 10.0.0.10/8</span><br><span class="line">     gateway4: 10.0.0.2</span><br><span class="line">     nameservers:</span><br><span class="line">       search: [magedu.com, magedu.org]</span><br><span class="line">       addresses: [180.76.76.76, 8.8.8.8, 1.1.1.1]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这是22.10版的</span></span><br><span class="line">zhang@ubuntu:/etc/netplan$sudo vim ens33.yaml </span><br><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: networkd</span><br><span class="line">  ethernets:</span><br><span class="line">    ens33:</span><br><span class="line">      addresses: [192.168.1.111/24]</span><br><span class="line">      optional: true</span><br><span class="line">      routes:</span><br><span class="line">        - to: default</span><br><span class="line">          via: 192.168.1.1</span><br><span class="line">      nameservers:</span><br><span class="line">        search: [baidu.com]</span><br><span class="line">        addresses: [223.6.6.6]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意差别：20的gateway4过期了，当前版本的NetworkManager放弃了这个属性！！</span></span><br></pre></td></tr></table></figure><p><strong>开启Ubuntu ssh root</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br><span class="line">su root</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果没安装ssh的server需要安装</span></span><br><span class="line">apt-get install openssh-server</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改/etc/ssh/sshd_config文件</span></span><br><span class="line">vim /etc/ssh/sshd_config</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把这行的<span class="comment">#号去掉</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PermitRootLogin prohibit-password</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启服务</span></span><br><span class="line">/etc/init.d/ssh stop</span><br><span class="line">/etc/init.d/ssh start</span><br><span class="line">service ssh restart</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="14-2-子网划分">14.2 子网划分</h3><blockquote><p><strong>相关公式：</strong></p><ul><li>一个网络的最多主机数= 2^主机ID位数-2</li><li>网络(段)数= 2^网络ID中可变的位数</li><li>网络IP= IP 与 netmask</li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">例题：</span></span><br><span class="line">中国移动10.0.0.0/8 给32个各省公司划分对应的子网</span><br><span class="line">1）每个省公司的子网的netmask？</span><br><span class="line">2^5&gt;=32 借5位网络ID</span><br><span class="line">8+5=13</span><br><span class="line">255.248.0.0</span><br><span class="line"></span><br><span class="line">2)每个省公司的子网的主机数有多少？</span><br><span class="line">2^(32-13)-2=524286</span><br><span class="line"></span><br><span class="line">3）河南省得到第10个子网，网络ID？</span><br><span class="line">10.00000 000.0.0/13</span><br><span class="line">10.01001 000.0.0/13</span><br><span class="line">10.72.0.0/13 </span><br><span class="line"></span><br><span class="line">4）河南省得到第10个子网的最小IP和最大的IP？</span><br><span class="line">10.01001 000.0.1</span><br><span class="line">10.01001 111.11111111.11111110</span><br><span class="line">10.72.0.1---10.79.255.254</span><br><span class="line"></span><br><span class="line">5）所有子网中最大，最小的子网的netid？</span><br><span class="line">10.00000 000.0.0/13 10.0.0.0/13</span><br><span class="line">10.11111 000.0.0/13 10.248.0.0/13</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/11/14/2022-11-14%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/11/14/2022-11-14%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是我的第一篇文章">这是我的第一篇文章</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1>1. 基本信息</h1><blockquote><p>Name: zhangguichuan(张桂川)<br>Age: 19<br>Address: ZhuHai<br>QQ: 1851504989(注明来意)<br>VX:不好意思谁都加不了hhh 😜<br>GitHub: <a href="https://github.com/wqingzy">https://github.com/wqingzy</a><br>Blog: <a href="https://www.zhangguichuan.top">https://www.zhangguichuan.top</a></p></blockquote><h1>2. 技术栈</h1><p><span style="color:aqua">博客框架：Hexo 6.2.0</span></p><ul><li>博客框架：<span style="color:aqua">博客框架：Hexo 6.2.0</span></li><li>主题：<span style="color:aqua">Butterfly 4.3.1</span></li><li>源码仓库：<span style="color:aqua">GitHub</span></li><li>托管与部署：<span style="color:aqua">GitHub Pages + Vercel</span></li><li>图床：<span style="color:aqua">Typora+PicGO+GitHub+CDN</span></li><li>图片压缩：<span style="color:aqua">Imagine 有损压缩技术 +imagesTool 转化图片格式为 webp</span></li><li>评论系统：<span style="color:aqua">Twikoo 系统 +Vercel 部署 +MongoDB 提供存储服务(以后完善)</span></li></ul><p>博客中的部分图片源于网络，侵删，本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处。</p><h1>3. 说说</h1><ul><li><p><strong>搭建博客的初衷</strong>：记录自己的学习过程、心得。方便做笔记和查看。同时相当于拥有了自己的独立空间，在上面写写东西;记录生活;分享知识;把自己的笔记总结归纳;巩固整体知识框，慢慢进步,何尝不是一件有趣的事情呢！😆😆😆</p></li><li><p><strong>博客内容</strong>：笔记大部分都是关于运维相关的一些知识。</p></li><li><p><strong>寄语</strong>：感谢每一位光临小站的朋友🍭🍭🍭</p></li></ul><h1>4. 免责声明</h1><p>本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。</p><p>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/fengche.css"/>
      <url>/css/fengche.css</url>
      
        <content type="html"><![CDATA[/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/background.css"/>
      <url>/css/background.css</url>
      
        <content type="html"><![CDATA[#web_bg {  background: -webkit-linear-gradient(    0deg,    rgba(247, 149, 51, 0.1) 0,    rgba(243, 112, 85, 0.1) 15%,    rgba(239, 78, 123, 0.1) 30%,    rgba(161, 102, 171, 0.1) 44%,    rgba(80, 115, 184, 0.1) 58%,    rgba(16, 152, 173, 0.1) 72%,    rgba(7, 179, 155, 0.1) 86%,    rgba(109, 186, 130, 0.1) 100%  );  background: -moz-linear-gradient(    0deg,    rgba(247, 149, 51, 0.1) 0,    rgba(243, 112, 85, 0.1) 15%,    rgba(239, 78, 123, 0.1) 30%,    rgba(161, 102, 171, 0.1) 44%,    rgba(80, 115, 184, 0.1) 58%,    rgba(16, 152, 173, 0.1) 72%,    rgba(7, 179, 155, 0.1) 86%,    rgba(109, 186, 130, 0.1) 100%  );  background: -o-linear-gradient(    0deg,    rgba(247, 149, 51, 0.1) 0,    rgba(243, 112, 85, 0.1) 15%,    rgba(239, 78, 123, 0.1) 30%,    rgba(161, 102, 171, 0.1) 44%,    rgba(80, 115, 184, 0.1) 58%,    rgba(16, 152, 173, 0.1) 72%,    rgba(7, 179, 155, 0.1) 86%,    rgba(109, 186, 130, 0.1) 100%  );  background: -ms-linear-gradient(    0deg,    rgba(247, 149, 51, 0.1) 0,    rgba(243, 112, 85, 0.1) 15%,    rgba(239, 78, 123, 0.1) 30%,    rgba(161, 102, 171, 0.1) 44%,    rgba(80, 115, 184, 0.1) 58%,    rgba(16, 152, 173, 0.1) 72%,    rgba(7, 179, 155, 0.1) 86%,    rgba(109, 186, 130, 0.1) 100%  );  background: linear-gradient(    90deg,    rgba(247, 149, 51, 0.1) 0,    rgba(243, 112, 85, 0.1) 15%,    rgba(239, 78, 123, 0.1) 30%,    rgba(161, 102, 171, 0.1) 44%,    rgba(80, 115, 184, 0.1) 58%,    rgba(16, 152, 173, 0.1) 72%,    rgba(7, 179, 155, 0.1) 86%,    rgba(109, 186, 130, 0.1) 100%  );}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/jianbian.css"/>
      <url>/css/jianbian.css</url>
      
        <content type="html"><![CDATA[/* 页脚footer *//* 渐变色滚动动画 */@-webkit-keyframes Gradient {    0% {        background-position: 0 50%;    }     50% {        background-position: 100% 50%;    }     100% {        background-position: 0 50%;    }} @-moz-keyframes Gradient {    0% {        background-position: 0 50%;    }     50% {        background-position: 100% 50%;    }     100% {        background-position: 0 50%;    }} @keyframes Gradient {    0% {        background-position: 0 50%;    }     50% {        background-position: 100% 50%;    }     100% {        background-position: 0 50%;    }}#footer {    background: linear-gradient(-45deg, #ee7752, #ce3e75, #23a6d5, #23d5ab);    background-size: 400% 400%;    -webkit-animation: Gradient 10s ease infinite;    -moz-animation: Gradient 10s ease infinite;    animation: Gradient 10s ease infinite;    -o-user-select: none;    -ms-user-select: none;    -webkit-user-select: none;    -moz-user-select: none;    user-select: none;    border-top-left-radius: 10px;    border-top-right-radius: 10px;}#footer:before {    background-color: rgba(0, 0, 0, 0);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/shouji.css"/>
      <url>/css/shouji.css</url>
      
        <content type="html"><![CDATA[.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }/*移动端优化：去除归档、标签、最新文章、公告、、只保留网站统计*/@media screen and (max-width: 800px) {    #aside_content    div:not(:last-child) {        display: none;        font-size: 13px;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>恋爱屋</title>
      <link href="/love/index.html"/>
      <url>/love/index.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f09db484289430e4751edb21a94118bcb123c0fb54dc5c3f7a55aa217aaa95e4">165d50f05814027fb7fe5e4ae8a088d886bd7aa9672b59c64b57b2fd895ce97403bc7fe28998ae14b9af1c1123e24ad7bd4a1170bd8ef40755e4cf8b0fb387ed3a6003917c5034ed9dc31f98baaa8aac6de1e9c8d9b4083ec1970f6d48c799f6120a42f7d3522a3fa828670f19bca63a3d0399efea76bdebb7577652e064184c6a64533deeb67f0d15d5cf49c0d030553de58dea9b64eabae20e4b10ee94f55a2159841f683e13e94f108c65c559f354</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这里记录这我和女朋友的一些事哦,需要密码才能访问进入！提示：123</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>生活</title>
      <link href="/life/index.html"/>
      <url>/life/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
